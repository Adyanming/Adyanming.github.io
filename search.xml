<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Claude Code 高阶使用技巧</title>
      <link href="/Notepad/12074.html"/>
      <url>/Notepad/12074.html</url>
      
        <content type="html"><![CDATA[<h1 id="Claude-Code-高阶使用技巧"><a href="#Claude-Code-高阶使用技巧" class="headerlink" title="Claude Code 高阶使用技巧"></a>Claude Code 高阶使用技巧</h1><p>本内容梳理了Claude Code的安装、核心功能、高级特性、集成能力及可视化工具等方面的使用技巧，旨在提供一份全面的参考资料。</p><h2 id="一、-Claude-Code-基础设置与启动"><a href="#一、-Claude-Code-基础设置与启动" class="headerlink" title="一、 Claude Code 基础设置与启动"></a>一、 Claude Code 基础设置与启动</h2><p>Claude Code是一款流行的AI编程工具，以下为其基础设置与启动方式：</p><ul><li><p><strong>前提条件</strong>:</p></li><li><p>确保已安装 <strong>Node.js</strong>。</p></li><li><p><strong>安装步骤</strong>:</p></li></ul><ol><li>复制Claude Code的安装命令。</li><li>打开命令行窗口，执行安装命令。</li><li>安装完成后，使用<code>cd</code>命令进入需要编写代码的项目目录。</li></ol><ul><li><strong>启动方式</strong>:</li><li><strong>官方账户登录</strong>: 若为Claude Code官网Pro或Max级别用户，直接输入命令<code>Claude</code>启动，并选择第一项前往官网登录。</li><li><strong>API接入 (通过Claude Code Router)</strong>:<br>*  利用开源项目 **Claude Code Router (CCR)**，可将任意大型模型API接入Claude Code。<br>*  启动命令为<code>CCR Code</code>。<br>*  关于CCR的免费使用方式及具体操作，可参考相关资料。</li></ul><h2 id="二、-核心命令与上下文管理"><a href="#二、-核心命令与上下文管理" class="headerlink" title="二、 核心命令与上下文管理"></a>二、 核心命令与上下文管理</h2><p>以下为Claude Code在日常交互中至关重要的命令及其功能：</p><h3 id="1-项目与上下文初始化"><a href="#1-项目与上下文初始化" class="headerlink" title="1. 项目与上下文初始化"></a>1. 项目与上下文初始化</h3><ul><li><strong><code>/init</code></strong>:</li><li><strong>功能</strong>: 命令Claude Code通读整个文件夹中的所有文件，深入分析当前项目。</li><li><strong>效果</strong>: 将学习到的项目知识保存到当前目录下的 <strong><code>Claude.md</code></strong> 文件中。</li><li><strong>作用</strong>: 后续与Claude Code的所有对话都将以该文件作为上下文，有助于AI更快理解项目。</li><li><strong>自定义</strong>: 用户可以手动修改<code>Claude.md</code>文件，补充重要信息（例如CSS框架知识），以提升AI理解的精准度和速度，类似于Cursor工具中的Cursor Rule。</li></ul><h3 id="2-对话上下文优化"><a href="#2-对话上下文优化" class="headerlink" title="2. 对话上下文优化"></a>2. 对话上下文优化</h3><ul><li><p><strong><code>/compact</code></strong>:</p></li><li><p><strong>功能</strong>: 压缩对话上下文。</p></li><li><p><strong>效果</strong>: 排除之前对话中无关紧要的内容，有效提高AI的专注力，并显著降低Token消耗。</p></li><li><p><strong>使用</strong>: 可以在命令后输入具体指令，指导AI如何进行压缩。</p></li><li><p><strong><code>/clear</code></strong>:</p></li><li><p><strong>功能</strong>: 清除与AI的对话记录。</p></li><li><p><strong>使用时机</strong>: 每次开启新任务前应使用此命令，以保持上下文的清洁。</p></li><li><p><strong>作用</strong>: 有助于AI更专注地执行新任务。</p></li></ul><h3 id="3-模型思考深度控制"><a href="#3-模型思考深度控制" class="headerlink" title="3. 模型思考深度控制"></a>3. 模型思考深度控制</h3><ul><li><strong><code>think</code></strong>, <strong><code>think hard</code></strong>, <strong><code>think harder</code></strong>, <strong><code>ultra think</code></strong>:</li><li><strong>性质</strong>: 这是Claude Code官方支持的，用于控制模型思考长度的指令，并非提示词技巧。</li><li><strong>强度</strong>: 四种指令强度逐级递增。</li><li><strong>应用</strong>: 在开始需要复杂推理的任务之前，可以添加这些思考提示词，以加大AI的思考深度。</li></ul><h3 id="4-命令行交互与记忆模式"><a href="#4-命令行交互与记忆模式" class="headerlink" title="4. 命令行交互与记忆模式"></a>4. 命令行交互与记忆模式</h3><ul><li><p><strong><code>!</code> (感叹号)</strong>:</p></li><li><p><strong>功能</strong>: 将对话窗口切换为命令行模式。</p></li><li><p><strong>作用</strong>: 允许执行临时命令行命令（例如<code>npm install</code>），无需额外开启窗口。</p></li><li><p><strong>优势</strong>: 命令的执行结果和过程会自动加入Claude Code的对话上下文，使AI能够从历史记录中了解依赖安装情况，避免重复安装。</p></li><li><p><strong><code>#</code> (井号)</strong>:</p></li><li><p><strong>功能</strong>: 进入记忆模式。</p></li><li><p><strong>效果</strong>: 用户输入的后续内容将被Claude Code以文件形式记录，并转化为AI的长期记忆。</p></li><li><p><strong>记忆存储位置</strong>:<br>*  <strong>项目级别</strong>: 直接保存在当前项目的<code>cloud.md</code>文件中。<br>*  <strong>用户级别</strong>: 保存在Claude Code的配置文件中（例如，Windows系统路径为<code>C:\Users\\.cloud\cloud.md</code>）。用户级别的记忆对所有文件夹和项目生效，作为Claude Code的全局记忆或系统提示词。</p></li></ul><h2 id="三、-IDE集成与非交互模式"><a href="#三、-IDE集成与非交互模式" class="headerlink" title="三、 IDE集成与非交互模式"></a>三、 IDE集成与非交互模式</h2><h3 id="1-IDE集成"><a href="#1-IDE集成" class="headerlink" title="1. IDE集成"></a>1. IDE集成</h3><ul><li><strong><code>/IDE</code></strong>:</li><li><strong>前提</strong>: 在常用IDE工具（如VSCode）中安装 <strong>Claude Code for VSCode</strong> 插件。</li><li><strong>步骤</strong>: 输入<code>/IDE</code>，选择对应的IDE（如VSCode），完成集成。</li><li><strong>主要功能</strong>:<br>*  <strong>代码感知</strong>: Claude Code能够感知并读取在IDE中选中的代码，用户可询问AI关于选中代码的功能。<br>*  <strong>代码修改对比</strong>: 当Claude Code进行代码修改时，会在IDE中弹出修改前后对比页面，直观展示差异，用户可在Claude Code中选择是否接受这些修改。</li></ul><h3 id="2-非交互模式"><a href="#2-非交互模式" class="headerlink" title="2. 非交互模式"></a>2. 非交互模式</h3><ul><li><strong><code>cloud -p &lt;问题&gt;</code></strong> (或 <strong><code>CCR Code -p &lt;问题&gt;</code></strong> 当使用Claude Code Router时):</li><li><strong>模式</strong>: 开启临时的、一次性的非交互式对话。</li><li><strong>过程</strong>: Claude Code会在后台进行思考，调用工具处理问题，完成后将结果打印输出。</li><li><strong>应用</strong>: 将Claude Code转变为命令行中的AI智能助手。</li></ul><h2 id="四、-模型上下文协议-MCP"><a href="#四、-模型上下文协议-MCP" class="headerlink" title="四、 模型上下文协议 (MCP)"></a>四、 模型上下文协议 (MCP)</h2><h3 id="1-MCP-定义与原理"><a href="#1-MCP-定义与原理" class="headerlink" title="1. MCP 定义与原理"></a>1. MCP 定义与原理</h3><ul><li><strong>全称</strong>: Model Context Protocol (模型上下文协议)。</li><li><strong>作用</strong>: MCP服务（或称MCP Server）作为AI与外部工具之间的中间层，代替人类访问并操作外部工具。</li><li><strong>原理</strong>: 旨在帮助AI查找最新代码文档并进行交互。</li></ul><h3 id="2-MCP-安装与管理"><a href="#2-MCP-安装与管理" class="headerlink" title="2. MCP 安装与管理"></a>2. MCP 安装与管理</h3><ul><li><p><strong>安装MCP (<code>cloud mcp add &lt;名称&gt;</code>)</strong>:</p></li><li><p><strong>示例</strong>: 安装<code>context7</code>（一个用于查找最新代码文档的MCP Server）。</p></li><li><p><strong>步骤</strong>:<br>1. 退出Claude Code。<br>2. 执行命令<code>cloud mcp add context7</code>。<br>3. 执行MCP Server的启动命令（例如<code>mpx -- &lt;启动参数&gt;</code>）。</p></li><li><p><strong>安装范围</strong>:<br>*  <strong>项目级别</strong>: 默认安装，仅在当前项目下生效。<br>*  <strong>用户级别</strong>: 可通过添加参数<code>--scope user</code>进行安装，对所有项目生效。</p></li><li><p><strong>查看已安装MCP</strong>: 在Claude Code中输入<code>/mcp</code>，回车即可查看。</p></li><li><p><strong>使用示例</strong>:</p></li></ul><ol><li>要求AI使用<code>context7</code>查找如何配置Tailwind 4。</li><li>要求AI使用<code>context7</code>将当前Tailwind V3项目升级到V4。</li><li>AI会调用MCP工具查找文档，整理升级步骤，并逐个文件进行修改，最终完成项目升级。</li></ol><ul><li><p><strong>删除MCP (<code>cloud mcp remove &lt;名称&gt;</code>)</strong>:</p></li><li><p><strong>步骤</strong>: 退出Claude Code，执行命令<code>cloud mcp remove context7</code>。</p></li><li><p><strong>远程调用MCP</strong>:</p></li><li><p><strong>SSE协议</strong>: <code>cloud mcp add &lt;名称&gt; --protocol sse --url &lt;服务地址&gt;</code></p></li><li><p><strong>Streamable HTTP协议</strong>: <code>cloud mcp add &lt;名称&gt; --protocol streamable-http --url &lt;服务地址&gt;</code></p></li><li><p><strong>示例</strong>: 配置一个Nyan数据库的MCP，使AI能够调用Nyan的MCP查找数据库中的表。</p></li></ul><h2 id="五、-权限管理"><a href="#五、-权限管理" class="headerlink" title="五、 权限管理"></a>五、 权限管理</h2><h3 id="1-精细化权限控制"><a href="#1-精细化权限控制" class="headerlink" title="1. 精细化权限控制"></a>1. 精细化权限控制</h3><ul><li><strong><code>/permissions</code></strong>:</li><li><strong>功能</strong>: 自定义Claude Code调用工具的规则。</li><li><strong><code>allow</code> (允许)</strong>:<br>*  <strong>用途</strong>: 将工具添加到允许列表后，Claude Code调用这些工具时无需再征求用户同意，可自动执行。<br>*  <strong>规则示例</strong>: <code>bash(git commit)</code> 表示允许自动执行Git commit命令。<br>*  <strong>存储级别</strong>: 配置可保存为项目设置或用户设置。<br>*  <strong>MCPs</strong>: 可将MCP Server（例如<code>mcp__Nyan</code>）放入允许列表。</li><li><strong><code>deny</code> (禁止)</strong>:<br>*  <strong>用途</strong>: 定义Claude Code禁止使用的工具。<br>*  <strong>内置工具</strong>: 可在Claude Code官方文档中查找所有内置工具的名称。<br>*  <strong>MCPs</strong>: 可以禁止特定MCPs的使用。</li></ul><h3 id="2-高权限模式"><a href="#2-高权限模式" class="headerlink" title="2. 高权限模式"></a>2. 高权限模式</h3><ul><li><strong><code>--dangerously-skip-permissions</code></strong>:</li><li><strong>使用方式</strong>: 在启动Claude Code时添加此参数（例如<code>cloud --dangerously-skip-permissions</code>或<code>CCR Code --dangerously-skip-permissions</code>）。</li><li><strong>效果</strong>: 赋予Claude Code最高权限，使其在使用任意工具和执行任意命令时，无需申请权限即可自动执行。</li></ul><h2 id="六、-自定义命令与钩子-Hooks"><a href="#六、-自定义命令与钩子-Hooks" class="headerlink" title="六、 自定义命令与钩子 (Hooks)"></a>六、 自定义命令与钩子 (Hooks)</h2><h3 id="1-自定义命令"><a href="#1-自定义命令" class="headerlink" title="1. 自定义命令"></a>1. 自定义命令</h3><ul><li><p><strong>位置</strong>:</p></li><li><p><strong>项目级别</strong>: 项目目录下的 <code>.cloud/commands/</code> 文件夹。</p></li><li><p><strong>用户级别</strong>: Claude Code配置目录下的 <code>commands/</code> 文件夹（对所有项目生效）。</p></li><li><p><strong>创建</strong>: 在<code>commands</code>文件夹中创建文件，文件名即为命令名称。</p></li><li><p><strong>示例</strong>: 创建<code>codereview.md</code>文件作为代码审核命令。</p></li><li><p><strong>内容</strong>: 使用自然语言描述命令需要执行的任务。</p></li><li><p><strong>参数传递</strong>: 使用 <code>$arguments</code> 作为传入参数的占位符。</p></li><li><p><strong>示例</strong>: 命令可以接收一个分支名参数，对比该分支与主分支的差异并提出审核意见。</p></li><li><p><strong>执行</strong>: 在Claude Code中输入<code>/</code>即可找到自定义命令，后接空格并输入参数（例如<code>/codereview Telwyn_four_branch</code>）。</p></li><li><p><strong>结果</strong>: Claude Code会执行相应的Git diff命令，并给出完整的Code Review意见。</p></li></ul><h3 id="2-钩子-Hooks"><a href="#2-钩子-Hooks" class="headerlink" title="2. 钩子 (Hooks)"></a>2. 钩子 (Hooks)</h3><ul><li><p><strong>功能</strong>: 让Claude Code在工作流程的特定节点自动执行某些操作。</p></li><li><p><strong>配置文件</strong>: <code>.cloud/settings.json</code> 或优先级更高的 <code>.cloud/settings.local.json</code>。</p></li><li><p><strong>配置示例</strong>:</p></li><li><p><strong>定义时机</strong>: <code>hooks</code> 中定义执行时机，例如<code>Post to use</code>（工具调用完成后）。</p></li><li><p><strong>匹配器 (<code>Matcher</code>)</strong>: 指定触发钩子的工具类型，例如文件修改工具。</p></li><li><p><strong>命令内容</strong>: 定义要执行的命令，例如运行<code>npx prettier check</code>来检查代码格式。</p></li><li><p><strong>工作流程</strong>: AI修改代码后，钩子立即触发代码格式检查，若发现错误，Claude Code会自动修复。</p></li><li><p><strong>触发事件</strong>: Claude Code官方文档列举了多种触发事件，可用于配置更多辅助开发的功能。</p></li></ul><h2 id="七、-子代理-Subagents"><a href="#七、-子代理-Subagents" class="headerlink" title="七、 子代理 (Subagents)"></a>七、 子代理 (Subagents)</h2><ul><li><p><strong>概念</strong>: 类似于编程中的子线程，允许Claude Code在后台开启多个子任务并行执行。</p></li><li><p><strong>优势</strong>:</p></li><li><p><strong>提高效率</strong>: 并行执行任务，加快完成速度。</p></li><li><p><strong>提高可预测性</strong>: 每个Subagent专注于一个小功能，结果更可控。</p></li><li><p><strong>提高成功率</strong>: 正确拆解复杂任务，提升任务完成成功率。</p></li><li><p><strong>创建 (<code>/agents</code> -&gt; <code>create</code>)</strong>:</p></li><li><p><strong>存储级别</strong>: 可选择项目级别或用户级别。</p></li><li><p><strong>配置</strong>:<br>*  描述: 自然语言描述Subagent的任务和期望结果（例如，代码审核大师，比较Git分支差异并提出审核意见）。<br>*  工具权限: 赋予Subagent所需工具的权限。<br>*  模型: 选择使用的模型。<br>*  颜色: 分配一个代表颜色。</p></li><li><p><strong>配置文件</strong>: 生成的配置文件存储在项目目录中。</p></li><li><p><strong>执行过程</strong>:</p></li></ul><ol><li>Claude Code接收任务后，根据Subagent的配置自动拆分出子任务。</li><li>子任务分配给不同的Subagent并行执行。</li><li>每个Subagent获取一份执行其子任务所需的精简上下文，避免被主对话污染，提高专注力。</li><li>所有Subagent执行完成后，主Agent整合所有结果并给出完整回答。</li></ol><ul><li><strong>应用</strong>: 可同时执行代码审核和天气查询等互不相关的任务，提高多任务处理能力。</li></ul><h2 id="八、-GitHub集成"><a href="#八、-GitHub集成" class="headerlink" title="八、 GitHub集成"></a>八、 GitHub集成</h2><h3 id="1-GitHub-CLI-工具"><a href="#1-GitHub-CLI-工具" class="headerlink" title="1. GitHub CLI 工具"></a>1. GitHub CLI 工具</h3><ul><li><p><strong>工具</strong>: GitHub CLI 是一款命令行工具，Claude Code可借助它执行所有GitHub操作。</p></li><li><p><strong>安装</strong>: 下载并安装对应操作系统的GitHub CLI。</p></li><li><p><strong>验证</strong>: 执行<code>gh repo list</code>可验证安装和认证状态。</p></li></ul><h3 id="2-集成应用场景"><a href="#2-集成应用场景" class="headerlink" title="2. 集成应用场景"></a>2. 集成应用场景</h3><ul><li><strong>示例</strong>: 修复GitHub Issue并推送至仓库。</li></ul><ol><li>要求Claude Code查看GitHub Issue内容（例如”缺少提交按钮”）。</li><li>Claude Code读取Issue并进行本地代码修复。</li><li>创建一个全新的修复分支。</li><li>将修复分支推送到GitHub。</li></ol><ul><li><strong>结果</strong>: Claude Code成功读取GitHub Issue，在本地完成代码修改，并将代码推送到GitHub，形成完美的闭环。</li></ul><h2 id="九、-历史对话与状态管理"><a href="#九、-历史对话与状态管理" class="headerlink" title="九、 历史对话与状态管理"></a>九、 历史对话与状态管理</h2><h3 id="1-历史对话回溯"><a href="#1-历史对话回溯" class="headerlink" title="1. 历史对话回溯"></a>1. 历史对话回溯</h3><ul><li><strong><code>/resume</code></strong>:</li><li><strong>功能</strong>: 查找并回溯之前的历史话题。</li><li><strong>操作</strong>: 选择历史话题后，按两下<code>ESC</code>键可跳转到对话中的具体某句话之前，继续对话。</li><li><strong>局限</strong>: 仅能回退对话内容，不能回退代码改动。</li></ul><h3 id="2-对话与代码同步回退"><a href="#2-对话与代码同步回退" class="headerlink" title="2. 对话与代码同步回退"></a>2. 对话与代码同步回退</h3><ul><li><strong><code>ccundo</code> (开源项目)</strong>:</li><li><strong>功能</strong>: 同时回退对话内容和代码状态。</li><li><strong>安装</strong>: 需先安装<code>ccundo</code>工具。</li><li><strong>使用</strong>:<br>*  <code>ccundo list</code>: 列出之前的所有对话记录及其编号。<br>*  <code>ccundo &lt;编号&gt;</code>: 将对话和代码内容同时回退到指定节点，继续工作。</li></ul><h3 id="3-对话内容导出"><a href="#3-对话内容导出" class="headerlink" title="3. 对话内容导出"></a>3. 对话内容导出</h3><ul><li><strong><code>/export</code></strong>:</li><li><strong>功能</strong>: 将当前对话内容复制到剪贴板。</li><li><strong>用途</strong>: 可将对话内容保存为文件，或粘贴给其他AI（例如ChatGPT）进行交叉验证或进一步分析。</li></ul><h2 id="十、-可视化界面：Claudia"><a href="#十、-可视化界面：Claudia" class="headerlink" title="十、 可视化界面：Claudia"></a>十、 可视化界面：Claudia</h2><h3 id="1-Claudia-简介"><a href="#1-Claudia-简介" class="headerlink" title="1. Claudia 简介"></a>1. Claudia 简介</h3><ul><li><p><strong>性质</strong>: 一个基于Claude Code打造的桌面可视化应用。</p></li><li><p><strong>社区</strong>: 在GitHub上获得大量关注。</p></li><li><p><strong>获取</strong>: 原始项目不提供安装包，需从源码编译。社区有开发者基于该项目提供了预编译的安装包版本，可在其Forks中找到Star数量较高的项目下载。</p></li></ul><h3 id="2-Claudia-安装与配置"><a href="#2-Claudia-安装与配置" class="headerlink" title="2. Claudia 安装与配置"></a>2. Claudia 安装与配置</h3><ul><li><p><strong>安装</strong>: 下载并安装对应操作系统的安装包。</p></li><li><p><strong>登录配置</strong>:</p></li><li><p><strong>官方账户</strong>: 若Claude Code使用官网账户登录，Claudia可直接使用。</p></li><li><p><strong>API&#x2F;CCR启动</strong>: 若Claude Code通过API或Claude Code Router启动，需在Claudia设置中配置API环境变量：<br>*  <code>Anthropic Auth Token</code>: 填写Claude Code控制台<code>Status</code>中显示的Token值。<br>*  <code>Anthropic Base URL</code>: 填写控制台中对应的URL。</p></li></ul><h3 id="3-Claudia-主要功能"><a href="#3-Claudia-主要功能" class="headerlink" title="3. Claudia 主要功能"></a>3. Claudia 主要功能</h3><p>Claudia提供了命令行中Claude Code功能的图形化界面操作方式，并新增了部分特性：</p><ul><li><p><strong>历史项目与对话管理</strong>: 方便管理历史项目及对话记录。</p></li><li><p><strong>新建对话</strong>: 直接选择文件夹开始新的对话。</p></li><li><p><strong>模型思考长度调整</strong>: 左下角可调整AI的思考长度。</p></li><li><p><strong>可视化操作</strong>:</p></li><li><p>创建MCP。</p></li><li><p>编辑<code>cloud.md</code>系统提示词。</p></li><li><p>查看使用情况仪表板。</p></li><li><p>配置Subagent。</p></li><li><p>在设置中添加环境变量。</p></li><li><p>添加Hooks。</p></li><li><p>添加自定义命令。</p></li><li><p><strong>多标签页功能</strong>: 更方便地管理历史记录和对话上下文。</p></li><li><p><strong>时间导航线 (检查点)</strong>:</p></li><li><p><strong>功能</strong>: 允许用户创建文件系统状态和对话历史的检查点。</p></li><li><p><strong>操作</strong>:<br>1. 点击<code>create checkpoint</code>创建检查点。<br>2. AI进行文件修改（例如删除文件）。<br>3. 点击<code>restore</code>检查点。</p></li><li><p><strong>优势</strong>: 能够同时回退文件改动和之前的对话历史，将所有状态还原到检查点的时间点，弥补了原生Claude Code无法回退文件改动的不足。</p></li></ul><h2 id="十一、-结语"><a href="#十一、-结语" class="headerlink" title="十一、 结语"></a>十一、 结语</h2><p>上述内容详细介绍了Claude Code在高级使用方面的诸多技巧，涵盖了从基础配置到复杂集成的大部分功能，旨在为用户提供全面而深入的参考。</p>]]></content>
      
      
      <categories>
          
          <category> 技术分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Claude </tag>
            
            <tag> AI工具 </tag>
            
            <tag> 编程工具 </tag>
            
            <tag> 开发技巧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Claude Code Router - 强大的模型路由工具</title>
      <link href="/Notepad/58864.html"/>
      <url>/Notepad/58864.html</url>
      
        <content type="html"><![CDATA[<hr><blockquote><p>一款强大的工具，可将 Claude Code 请求路由到不同的模型，并自定义任何请求。</p></blockquote><blockquote><p>现在你可以通过<a href="https://platform.iflow.cn/docs/api-mode">心流平台</a>免费使用<code>GLM-4.5</code>、<code>Kimi-K2</code>、<code>Qwen3-Coder-480B-A35B</code>、<code>DeepSeek v3.1</code>等模型。<br>你可以使用<code>ccr ui</code>命令在UI中直接导入<code>iflow</code>模板，值得注意的是心流限制每位用户的并发数为1，意味着你需要将<code>background</code>路由到其他模型。<br>如果你想获得更好的体验，可以尝试<a href="https://cli.iflow.cn/">iFlow CLI</a>。</p></blockquote><p><img src="/blog/images/claude-code.png"></p><p><img src="/blog/images/roadmap.svg"></p><h2 id="✨-功能"><a href="#✨-功能" class="headerlink" title="✨ 功能"></a>✨ 功能</h2><ul><li><strong>模型路由</strong>: 根据您的需求将请求路由到不同的模型（例如，后台任务、思考、长上下文）。</li><li><strong>多提供商支持</strong>: 支持 OpenRouter、DeepSeek、Ollama、Gemini、Volcengine 和 SiliconFlow 等各种模型提供商。</li><li><strong>请求&#x2F;响应转换</strong>: 使用转换器为不同的提供商自定义请求和响应。</li><li><strong>动态模型切换</strong>: 在 Claude Code 中使用 <code>/model</code> 命令动态切换模型。</li><li><strong>GitHub Actions 集成</strong>: 在您的 GitHub 工作流程中触发 Claude Code 任务。</li><li><strong>插件系统</strong>: 使用自定义转换器扩展功能。</li></ul><h2 id="🚀-快速入门"><a href="#🚀-快速入门" class="headerlink" title="🚀 快速入门"></a>🚀 快速入门</h2><h3 id="1-安装"><a href="#1-安装" class="headerlink" title="1. 安装"></a>1. 安装</h3><p>首先，请确保您已安装 <a href="https://docs.anthropic.com/en/docs/claude-code/quickstart">Claude Code</a>：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g @anthropic-ai/claude-code</span><br></pre></td></tr></table></figure><p>然后，安装 Claude Code Router：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g @musistudio/claude-code-router</span><br></pre></td></tr></table></figure><h3 id="2-配置"><a href="#2-配置" class="headerlink" title="2. 配置"></a>2. 配置</h3><p>创建并配置您的 <code>~/.claude-code-router/config.json</code> 文件。有关更多详细信息，您可以参考 <code>config.example.json</code>。</p><p><code>config.json</code> 文件有几个关键部分：</p><ul><li><strong><code>PROXY_URL</code></strong> (可选): 您可以为 API 请求设置代理，例如：<code>&quot;PROXY_URL&quot;: &quot;http://127.0.0.1:7890&quot;</code>。</li><li><strong><code>LOG</code></strong> (可选): 您可以通过将其设置为 <code>true</code> 来启用日志记录。当设置为 <code>false</code> 时，将不会创建日志文件。默认值为 <code>true</code>。</li><li><strong><code>LOG_LEVEL</code></strong> (可选): 设置日志级别。可用选项包括：<code>&quot;fatal&quot;</code>、<code>&quot;error&quot;</code>、<code>&quot;warn&quot;</code>、<code>&quot;info&quot;</code>、<code>&quot;debug&quot;</code>、<code>&quot;trace&quot;</code>。默认值为 <code>&quot;debug&quot;</code>。</li><li><strong>日志系统</strong>: Claude Code Router 使用两个独立的日志系统：<ul><li><strong>服务器级别日志</strong>: HTTP 请求、API 调用和服务器事件使用 pino 记录在 <code>~/.claude-code-router/logs/</code> 目录中，文件名类似于 <code>ccr-*.log</code></li><li><strong>应用程序级别日志</strong>: 路由决策和业务逻辑事件记录在 <code>~/.claude-code-router/claude-code-router.log</code> 文件中</li></ul></li><li><strong><code>APIKEY</code></strong> (可选): 您可以设置一个密钥来进行身份验证。设置后，客户端请求必须在 <code>Authorization</code> 请求头 (例如, <code>Bearer your-secret-key</code>) 或 <code>x-api-key</code> 请求头中提供此密钥。例如：<code>&quot;APIKEY&quot;: &quot;your-secret-key&quot;</code>。</li><li><strong><code>HOST</code></strong> (可选): 您可以设置服务的主机地址。如果未设置 <code>APIKEY</code>，出于安全考虑，主机地址将强制设置为 <code>127.0.0.1</code>，以防止未经授权的访问。例如：<code>&quot;HOST&quot;: &quot;0.0.0.0&quot;</code>。</li><li><strong><code>NON_INTERACTIVE_MODE</code></strong> (可选): 当设置为 <code>true</code> 时，启用与非交互式环境（如 GitHub Actions、Docker 容器或其他 CI&#x2F;CD 系统）的兼容性。这会设置适当的环境变量（<code>CI=true</code>、<code>FORCE_COLOR=0</code> 等）并配置 stdin 处理，以防止进程在自动化环境中挂起。例如：<code>&quot;NON_INTERACTIVE_MODE&quot;: true</code>。</li><li><strong><code>Providers</code></strong>: 用于配置不同的模型提供商。</li><li><strong><code>Router</code></strong>: 用于设置路由规则。<code>default</code> 指定默认模型，如果未配置其他路由，则该模型将用于所有请求。</li><li><strong><code>API_TIMEOUT_MS</code></strong>: API 请求超时时间，单位为毫秒。</li></ul><p>这是一个综合示例：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;APIKEY&quot;</span><span class="punctuation">:</span> <span class="string">&quot;your-secret-key&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;PROXY_URL&quot;</span><span class="punctuation">:</span> <span class="string">&quot;http://127.0.0.1:7890&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;LOG&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;API_TIMEOUT_MS&quot;</span><span class="punctuation">:</span> <span class="number">600000</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;NON_INTERACTIVE_MODE&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;Providers&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;openrouter&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;api_base_url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://openrouter.ai/api/v1/chat/completions&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;api_key&quot;</span><span class="punctuation">:</span> <span class="string">&quot;sk-xxx&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;models&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="string">&quot;google/gemini-2.5-pro-preview&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;anthropic/claude-sonnet-4&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;anthropic/claude-3.5-sonnet&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;anthropic/claude-3.7-sonnet:thinking&quot;</span></span><br><span class="line">      <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;transformer&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;use&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;openrouter&quot;</span><span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;deepseek&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;api_base_url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://api.deepseek.com/chat/completions&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;api_key&quot;</span><span class="punctuation">:</span> <span class="string">&quot;sk-xxx&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;models&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;deepseek-chat&quot;</span><span class="punctuation">,</span> <span class="string">&quot;deepseek-reasoner&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;transformer&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;use&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;deepseek&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;deepseek-chat&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;use&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;tooluse&quot;</span><span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ollama&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;api_base_url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;http://localhost:11434/v1/chat/completions&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;api_key&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ollama&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;models&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;qwen2.5-coder:latest&quot;</span><span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;gemini&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;api_base_url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://generativelanguage.googleapis.com/v1beta/models/&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;api_key&quot;</span><span class="punctuation">:</span> <span class="string">&quot;sk-xxx&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;models&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;gemini-2.5-flash&quot;</span><span class="punctuation">,</span> <span class="string">&quot;gemini-2.5-pro&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;transformer&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;use&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;gemini&quot;</span><span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;volcengine&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;api_base_url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://ark.cn-beijing.volces.com/api/v3/chat/completions&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;api_key&quot;</span><span class="punctuation">:</span> <span class="string">&quot;sk-xxx&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;models&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;deepseek-v3-250324&quot;</span><span class="punctuation">,</span> <span class="string">&quot;deepseek-r1-250528&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;transformer&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;use&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;deepseek&quot;</span><span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;modelscope&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;api_base_url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://api-inference.modelscope.cn/v1/chat/completions&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;api_key&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;models&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;Qwen/Qwen3-Coder-480B-A35B-Instruct&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Qwen/Qwen3-235B-A22B-Thinking-2507&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;transformer&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;use&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">          <span class="punctuation">[</span></span><br><span class="line">            <span class="string">&quot;maxtoken&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;max_tokens&quot;</span><span class="punctuation">:</span> <span class="number">65536</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">          <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">          <span class="string">&quot;enhancetool&quot;</span></span><br><span class="line">        <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;Qwen/Qwen3-235B-A22B-Thinking-2507&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;use&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;reasoning&quot;</span><span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;dashscope&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;api_base_url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;api_key&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;models&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;qwen3-coder-plus&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;transformer&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;use&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">          <span class="punctuation">[</span></span><br><span class="line">            <span class="string">&quot;maxtoken&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;max_tokens&quot;</span><span class="punctuation">:</span> <span class="number">65536</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">          <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">          <span class="string">&quot;enhancetool&quot;</span></span><br><span class="line">        <span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;aihubmix&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;api_base_url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://aihubmix.com/v1/chat/completions&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;api_key&quot;</span><span class="punctuation">:</span> <span class="string">&quot;sk-&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;models&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="string">&quot;Z/glm-4.5&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;claude-opus-4-20250514&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;gemini-2.5-pro&quot;</span></span><br><span class="line">      <span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;Router&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;default&quot;</span><span class="punctuation">:</span> <span class="string">&quot;deepseek,deepseek-chat&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;background&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ollama,qwen2.5-coder:latest&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;think&quot;</span><span class="punctuation">:</span> <span class="string">&quot;deepseek,deepseek-reasoner&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;longContext&quot;</span><span class="punctuation">:</span> <span class="string">&quot;openrouter,google/gemini-2.5-pro-preview&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;longContextThreshold&quot;</span><span class="punctuation">:</span> <span class="number">60000</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;webSearch&quot;</span><span class="punctuation">:</span> <span class="string">&quot;gemini,gemini-2.5-flash&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="3-使用-Router-运行-Claude-Code"><a href="#3-使用-Router-运行-Claude-Code" class="headerlink" title="3. 使用 Router 运行 Claude Code"></a>3. 使用 Router 运行 Claude Code</h3><p>使用 router 启动 Claude Code：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ccr code</span><br></pre></td></tr></table></figure><blockquote><p><strong>注意</strong>: 修改配置文件后，需要重启服务使配置生效：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ccr restart</span><br></pre></td></tr></table></figure></blockquote><h3 id="4-UI-模式"><a href="#4-UI-模式" class="headerlink" title="4. UI 模式"></a>4. UI 模式</h3><p>为了获得更直观的体验，您可以使用 UI 模式来管理您的配置：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ccr ui</span><br></pre></td></tr></table></figure><p>这将打开一个基于 Web 的界面，您可以在其中轻松查看和编辑您的 <code>config.json</code> 文件。</p><p><img src="/blog/images/ui.png" alt="UI"></p><h4 id="Providers"><a href="#Providers" class="headerlink" title="Providers"></a>Providers</h4><p><code>Providers</code> 数组是您定义要使用的不同模型提供商的地方。每个提供商对象都需要：</p><ul><li><code>name</code>: 提供商的唯一名称。</li><li><code>api_base_url</code>: 聊天补全的完整 API 端点。</li><li><code>api_key</code>: 您提供商的 API 密钥。</li><li><code>models</code>: 此提供商可用的模型名称列表。</li><li><code>transformer</code> (可选): 指定用于处理请求和响应的转换器。</li></ul><h4 id="Transformers"><a href="#Transformers" class="headerlink" title="Transformers"></a>Transformers</h4><p>Transformers 允许您修改请求和响应负载，以确保与不同提供商 API 的兼容性。</p><ul><li><p><strong>全局 Transformer</strong>: 将转换器应用于提供商的所有模型。在此示例中，<code>openrouter</code> 转换器将应用于 <code>openrouter</code> 提供商下的所有模型。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;openrouter&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;api_base_url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://openrouter.ai/api/v1/chat/completions&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;api_key&quot;</span><span class="punctuation">:</span> <span class="string">&quot;sk-xxx&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;models&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="string">&quot;google/gemini-2.5-pro-preview&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;anthropic/claude-sonnet-4&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;anthropic/claude-3.5-sonnet&quot;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;transformer&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;use&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;openrouter&quot;</span><span class="punctuation">]</span> <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></li><li><p><strong>特定于模型的 Transformer</strong>: 将转换器应用于特定模型。在此示例中，<code>deepseek</code> 转换器应用于所有模型，而额外的 <code>tooluse</code> 转换器仅应用于 <code>deepseek-chat</code> 模型。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;deepseek&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;api_base_url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://api.deepseek.com/chat/completions&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;api_key&quot;</span><span class="punctuation">:</span> <span class="string">&quot;sk-xxx&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;models&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;deepseek-chat&quot;</span><span class="punctuation">,</span> <span class="string">&quot;deepseek-reasoner&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;transformer&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;use&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;deepseek&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;deepseek-chat&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;use&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;tooluse&quot;</span><span class="punctuation">]</span> <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></li><li><p><strong>向 Transformer 传递选项</strong>: 某些转换器（如 <code>maxtoken</code>）接受选项。要传递选项，请使用嵌套数组，其中第一个元素是转换器名称，第二个元素是选项对象。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;siliconflow&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;api_base_url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://api.siliconflow.cn/v1/chat/completions&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;api_key&quot;</span><span class="punctuation">:</span> <span class="string">&quot;sk-xxx&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;models&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;moonshotai/Kimi-K2-Instruct&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;transformer&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;use&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="punctuation">[</span></span><br><span class="line">        <span class="string">&quot;maxtoken&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;max_tokens&quot;</span><span class="punctuation">:</span> <span class="number">16384</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></li></ul><p><strong>可用的内置 Transformer：</strong></p><ul><li><code>Anthropic</code>: 如果你只使用这一个转换器，则会直接透传请求和响应(你可以用它来接入其他支持Anthropic端点的服务商)。</li><li><code>deepseek</code>: 适配 DeepSeek API 的请求&#x2F;响应。</li><li><code>gemini</code>: 适配 Gemini API 的请求&#x2F;响应。</li><li><code>openrouter</code>: 适配 OpenRouter API 的请求&#x2F;响应。它还可以接受一个 <code>provider</code> 路由参数，以指定 OpenRouter 应使用哪些底层提供商。有关更多详细信息，请参阅 <a href="https://openrouter.ai/docs/features/provider-routing">OpenRouter 文档</a>。请参阅下面的示例：<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;transformer&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;use&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;openrouter&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;moonshotai/kimi-k2&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;use&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="punctuation">[</span></span><br><span class="line">        <span class="string">&quot;openrouter&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;provider&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;only&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;moonshotai/fp8&quot;</span><span class="punctuation">]</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></li><li><code>groq</code>: 适配 groq API 的请求&#x2F;响应</li><li><code>maxtoken</code>: 设置特定的 <code>max_tokens</code> 值。</li><li><code>tooluse</code>: 优化某些模型的工具使用(通过<code>tool_choice</code>参数)。</li><li><code>gemini-cli</code> (实验性): 通过 Gemini CLI <a href="https://gist.github.com/musistudio/1c13a65f35916a7ab690649d3df8d1cd">gemini-cli.js</a> 对 Gemini 的非官方支持。</li><li><code>reasoning</code>: 用于处理 <code>reasoning_content</code> 字段。</li><li><code>sampling</code>: 用于处理采样信息字段，如 <code>temperature</code>、<code>top_p</code>、<code>top_k</code> 和 <code>repetition_penalty</code>。</li><li><code>enhancetool</code>: 对 LLM 返回的工具调用参数增加一层容错处理（这会导致不再流式返回工具调用信息）。</li><li><code>cleancache</code>: 清除请求中的 <code>cache_control</code> 字段。</li><li><code>vertex-gemini</code>: 处理使用 vertex 鉴权的 gemini api。</li><li><code>qwen-cli</code> (实验性): 通过 Qwen CLI <a href="https://gist.github.com/musistudio/f5a67841ced39912fd99e42200d5ca8b">qwen-cli.js</a> 对 qwen3-coder-plus 的非官方支持。</li><li><code>rovo-cli</code> (experimental): 通过 Atlassian Rovo Dev CLI <a href="https://gist.github.com/SaseQ/c2a20a38b11276537ec5332d1f7a5e53">rovo-cli.js</a> 对 GPT-5 的非官方支持。</li></ul><p><strong>自定义 Transformer:</strong></p><p>您还可以创建自己的转换器，并通过 <code>config.json</code> 中的 <code>transformers</code> 字段加载它们。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;transformers&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;path&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/User/xxx/.claude-code-router/plugins/gemini-cli.js&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;options&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;project&quot;</span><span class="punctuation">:</span> <span class="string">&quot;xxx&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h4 id="Router"><a href="#Router" class="headerlink" title="Router"></a>Router</h4><p><code>Router</code> 对象定义了在不同场景下使用哪个模型：</p><ul><li><code>default</code>: 用于常规任务的默认模型。</li><li><code>background</code>: 用于后台任务的模型。这可以是一个较小的本地模型以节省成本。</li><li><code>think</code>: 用于推理密集型任务（如计划模式）的模型。</li><li><code>longContext</code>: 用于处理长上下文（例如，&gt; 60K 令牌）的模型。</li><li><code>longContextThreshold</code> (可选): 触发长上下文模型的令牌数阈值。如果未指定，默认为 60000。</li><li><code>webSearch</code>: 用于处理网络搜索任务，需要模型本身支持。如果使用<code>openrouter</code>需要在模型后面加上<code>:online</code>后缀。</li><li><code>image</code>(测试版): 用于处理图片类任务（采用CCR内置的agent支持），如果该模型不支持工具调用，需要将<code>config.forceUseImageAgent</code>属性设置为<code>true</code>。</li></ul><p>您还可以使用 <code>/model</code> 命令在 Claude Code 中动态切换模型：<br><code>/model provider_name,model_name</code><br>示例: <code>/model openrouter,anthropic/claude-3.5-sonnet</code></p><h4 id="自定义路由器"><a href="#自定义路由器" class="headerlink" title="自定义路由器"></a>自定义路由器</h4><p>对于更高级的路由逻辑，您可以在 <code>config.json</code> 中通过 <code>CUSTOM_ROUTER_PATH</code> 字段指定一个自定义路由器脚本。这允许您实现超出默认场景的复杂路由规则。</p><p>在您的 <code>config.json</code> 中配置:</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;CUSTOM_ROUTER_PATH&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/User/xxx/.claude-code-router/custom-router.js&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>自定义路由器文件必须是一个导出 <code>async</code> 函数的 JavaScript 模块。该函数接收请求对象和配置对象作为参数，并应返回提供商和模型名称的字符串（例如 <code>&quot;provider_name,model_name&quot;</code>），如果返回 <code>null</code> 则回退到默认路由。</p><p>这是一个基于 <code>custom-router.example.js</code> 的 <code>custom-router.js</code> 示例：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// /User/xxx/.claude-code-router/custom-router.js</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 一个自定义路由函数，用于根据请求确定使用哪个模型。</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">object</span>&#125; <span class="variable">req</span> - 来自 Claude Code 的请求对象，包含请求体。</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">object</span>&#125; <span class="variable">config</span> - 应用程序的配置对象。</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns</span> &#123;<span class="type">Promise&lt;string|null&gt;</span>&#125; - 一个解析为 &quot;provider,model_name&quot; 字符串的 Promise，如果返回 null，则使用默认路由。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">router</span>(<span class="params">req, config</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> userMessage = req.<span class="property">body</span>.<span class="property">messages</span>.<span class="title function_">find</span>(<span class="function"><span class="params">m</span> =&gt;</span> m.<span class="property">role</span> === <span class="string">&#x27;user&#x27;</span>)?.<span class="property">content</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (userMessage &amp;&amp; userMessage.<span class="title function_">includes</span>(<span class="string">&#x27;解释这段代码&#x27;</span>)) &#123;</span><br><span class="line">    <span class="comment">// 为代码解释任务使用更强大的模型</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;openrouter,anthropic/claude-3.5-sonnet&#x27;</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 回退到默认的路由配置</span></span><br><span class="line">  <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h5 id="子代理路由"><a href="#子代理路由" class="headerlink" title="子代理路由"></a>子代理路由</h5><p>对于子代理内的路由，您必须在子代理提示词的<strong>开头</strong>包含 <code>&lt;CCR-SUBAGENT-MODEL&gt;provider,model&lt;/CCR-SUBAGENT-MODEL&gt;</code> 来指定特定的提供商和模型。这样可以将特定的子代理任务定向到指定的模型。</p><p><strong>示例：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;CCR-SUBAGENT-MODEL&gt;openrouter,anthropic/claude-3.5-sonnet&lt;/CCR-SUBAGENT-MODEL&gt;</span><br><span class="line">请帮我分析这段代码是否存在潜在的优化空间...</span><br></pre></td></tr></table></figure><h2 id="Status-Line-Beta"><a href="#Status-Line-Beta" class="headerlink" title="Status Line (Beta)"></a>Status Line (Beta)</h2><p>为了在运行时更好的查看claude-code-router的状态，claude-code-router在v1.0.40内置了一个statusline工具，你可以在UI中启用它，<br><img src="/blog/images/statusline-config.png" alt="statusline-config.png"></p><p>效果如下：<br><img src="/blog/images/statusline.png" alt="statusline"></p><h2 id="🤖-GitHub-Actions"><a href="#🤖-GitHub-Actions" class="headerlink" title="🤖 GitHub Actions"></a>🤖 GitHub Actions</h2><p>将 Claude Code Router 集成到您的 CI&#x2F;CD 管道中。在设置 <a href="https://docs.anthropic.com/en/docs/claude-code/github-actions">Claude Code Actions</a> 后，修改您的 <code>.github/workflows/claude.yaml</code> 以使用路由器：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">Claude</span> <span class="string">Code</span></span><br><span class="line"></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">issue_comment:</span></span><br><span class="line">    <span class="attr">types:</span> [<span class="string">created</span>]</span><br><span class="line">  <span class="comment"># ... other triggers</span></span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">claude:</span></span><br><span class="line">    <span class="attr">if:</span> <span class="string">|</span></span><br><span class="line"><span class="string">      (github.event_name == &#x27;issue_comment&#x27; &amp;&amp; contains(github.event.comment.body, &#x27;@claude&#x27;)) ||</span></span><br><span class="line"><span class="string">      # ... other conditions</span></span><br><span class="line"><span class="string"></span>    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    <span class="attr">permissions:</span></span><br><span class="line">      <span class="attr">contents:</span> <span class="string">read</span></span><br><span class="line">      <span class="attr">pull-requests:</span> <span class="string">read</span></span><br><span class="line">      <span class="attr">issues:</span> <span class="string">read</span></span><br><span class="line">      <span class="attr">id-token:</span> <span class="string">write</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Checkout</span> <span class="string">repository</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/checkout@v4</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">fetch-depth:</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Prepare</span> <span class="string">Environment</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          curl -fsSL https://bun.sh/install | bash</span></span><br><span class="line"><span class="string">          mkdir -p $HOME/.claude-code-router</span></span><br><span class="line"><span class="string">          cat &lt;&lt; &#x27;EOF&#x27; &gt; $HOME/.claude-code-router/config.json</span></span><br><span class="line"><span class="string">          &#123;</span></span><br><span class="line"><span class="string">            &quot;log&quot;: true,</span></span><br><span class="line"><span class="string">            &quot;NON_INTERACTIVE_MODE&quot;: true,</span></span><br><span class="line"><span class="string">            &quot;OPENAI_API_KEY&quot;: &quot;$&#123;&#123; secrets.OPENAI_API_KEY &#125;&#125;&quot;,</span></span><br><span class="line"><span class="string">            &quot;OPENAI_BASE_URL&quot;: &quot;https://api.deepseek.com&quot;,</span></span><br><span class="line"><span class="string">            &quot;OPENAI_MODEL&quot;: &quot;deepseek-chat&quot;</span></span><br><span class="line"><span class="string">          &#125;</span></span><br><span class="line"><span class="string">          EOF</span></span><br><span class="line"><span class="string"></span>        <span class="attr">shell:</span> <span class="string">bash</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Start</span> <span class="string">Claude</span> <span class="string">Code</span> <span class="string">Router</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          nohup ~/.bun/bin/bunx @musistudio/claude-code-router@1.0.8 start &amp;</span></span><br><span class="line"><span class="string"></span>        <span class="attr">shell:</span> <span class="string">bash</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Run</span> <span class="string">Claude</span> <span class="string">Code</span></span><br><span class="line">        <span class="attr">id:</span> <span class="string">claude</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">anthropics/claude-code-action@beta</span></span><br><span class="line">        <span class="attr">env:</span></span><br><span class="line">          <span class="attr">ANTHROPIC_BASE_URL:</span> <span class="string">http://localhost:3456</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">anthropic_api_key:</span> <span class="string">&quot;any-string-is-ok&quot;</span></span><br></pre></td></tr></table></figure><p>这种设置可以实现有趣的自动化，例如在非高峰时段运行任务以降低 API 成本。</p><h2 id="📝-深入阅读"><a href="#📝-深入阅读" class="headerlink" title="📝 深入阅读"></a>📝 深入阅读</h2><ul><li><a href="blog/zh/%E9%A1%B9%E7%9B%AE%E5%88%9D%E8%A1%B7%E5%8F%8A%E5%8E%9F%E7%90%86.md">项目动机和工作原理</a></li><li><a href="blog/zh/%E6%88%96%E8%AE%B8%E6%88%91%E4%BB%AC%E8%83%BD%E5%9C%A8Router%E4%B8%AD%E5%81%9A%E6%9B%B4%E5%A4%9A%E4%BA%8B%E6%83%85.md">也许我们可以用路由器做更多事情</a></li></ul></content>]]></content>
      
      
      <categories>
          
          <category> 技术分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Claude Code </tag>
            
            <tag> AI </tag>
            
            <tag> 模型路由 </tag>
            
            <tag> 开发工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Rocket.Chat</title>
      <link href="/Notepad/12214.html"/>
      <url>/Notepad/12214.html</url>
      
        <content type="html"><![CDATA[<!-- <div class="video-container">[up主专用，视频内嵌代码贴在这]</div><style>.video-container {    position: relative;    width: 100%;    padding-top: 56.25%; /* 16:9 aspect ratio (height/width = 9/16 * 100%) */}.video-container iframe {    position: absolute;    top: 0;    left: 0;    width: 100%;    height: 100%;}</style> --><h1 id="Rocket-Chat"><a href="#Rocket-Chat" class="headerlink" title="Rocket.Chat"></a>Rocket.Chat</h1><p>在VPS上安装 <strong>Rocket.Chat</strong>，这是一款强大的开源即时通讯平台，可以用于团队协作或作为公共聊天室使用。<br>将通过 <strong>Docker</strong> 部署，确保安装简便、灵活。</p><h3 id="1-安装Docker"><a href="#1-安装Docker" class="headerlink" title="1. 安装Docker"></a>1. 安装Docker</h3><p>Docker是一个非常适合部署应用的容器化平台，通过Docker你可以轻松拉取、启动Rocket.Chat的容器。以下是如何在你的VPS上安装Docker的步骤：</p><h4 id="1-1-更新系统软件包"><a href="#1-1-更新系统软件包" class="headerlink" title="1.1 更新系统软件包"></a>1.1 更新系统软件包</h4><p>首先，确保你的VPS上安装的软件包是最新的：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt update</span><br><span class="line"><span class="built_in">sudo</span> apt upgrade</span><br></pre></td></tr></table></figure><h4 id="1-2-安装Docker"><a href="#1-2-安装Docker" class="headerlink" title="1.2 安装Docker"></a>1.2 安装Docker</h4><p>使用以下命令安装Docker：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt install docker.io</span><br></pre></td></tr></table></figure><h4 id="1-3-启动Docker并设置开机启动"><a href="#1-3-启动Docker并设置开机启动" class="headerlink" title="1.3 启动Docker并设置开机启动"></a>1.3 启动Docker并设置开机启动</h4><p>安装完Docker后，需要启动它并设置为开机自动启动：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> systemctl start docker</span><br><span class="line"><span class="built_in">sudo</span> systemctl <span class="built_in">enable</span> docker</span><br></pre></td></tr></table></figure><h4 id="1-4-验证Docker是否成功安装"><a href="#1-4-验证Docker是否成功安装" class="headerlink" title="1.4 验证Docker是否成功安装"></a>1.4 验证Docker是否成功安装</h4><p>通过以下命令验证Docker是否成功安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker --version</span><br></pre></td></tr></table></figure><p>你应该能看到Docker的版本信息，例如 <code>Docker version 20.10.7</code>。</p><h3 id="2-安装Docker-Compose（可选）"><a href="#2-安装Docker-Compose（可选）" class="headerlink" title="2. 安装Docker Compose（可选）"></a>2. 安装Docker Compose（可选）</h3><p>如果你打算使用 <strong>Docker Compose</strong> 来管理多个容器（例如Rocket.Chat和MongoDB数据库），可以安装 <code>docker-compose</code>。这是一个方便的工具，适合管理多容器应用。</p><h4 id="2-1-安装Docker-Compose"><a href="#2-1-安装Docker-Compose" class="headerlink" title="2.1 安装Docker Compose"></a>2.1 安装Docker Compose</h4><p>运行以下命令安装Docker Compose：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt install docker-compose</span><br></pre></td></tr></table></figure><h3 id="3-拉取并运行Rocket-Chat容器"><a href="#3-拉取并运行Rocket-Chat容器" class="headerlink" title="3. 拉取并运行Rocket.Chat容器"></a>3. 拉取并运行Rocket.Chat容器</h3><p>Rocket.Chat依赖于 <strong>MongoDB</strong> 数据库。我们将同时运行两个Docker容器：一个是Rocket.Chat应用容器，另一个是MongoDB容器。</p><h4 id="3-1-启动MongoDB容器"><a href="#3-1-启动MongoDB容器" class="headerlink" title="3.1 启动MongoDB容器"></a>3.1 启动MongoDB容器</h4><p>首先，我们需要启动MongoDB容器，因为Rocket.Chat需要依赖MongoDB数据库。运行以下命令拉取并启动MongoDB：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker run --name mongodb -d \</span><br><span class="line">  -p 27017:27017 \</span><br><span class="line">  -v /opt/rocketchat/data/db:/data/db \</span><br><span class="line">  mongo:4.0</span><br></pre></td></tr></table></figure><p>解释：</p><ul><li><code>--name mongodb</code>：容器名称为<code>mongodb</code>。</li><li><code>-d</code>：后台运行容器。</li><li><code>-p 27017:27017</code>：将本地的27017端口映射到MongoDB容器的27017端口。</li><li><code>-v /opt/rocketchat/data/db:/data/db</code>：将MongoDB的数据持久化存储在宿主机的<code>/opt/rocketchat/data/db</code>目录下。</li></ul><h4 id="3-2-启动Rocket-Chat容器"><a href="#3-2-启动Rocket-Chat容器" class="headerlink" title="3.2 启动Rocket.Chat容器"></a>3.2 启动Rocket.Chat容器</h4><p>接着，运行Rocket.Chat容器并连接到MongoDB：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">docker run --name rocketchat -d \</span><br><span class="line">  --<span class="built_in">link</span> mongodb:db \</span><br><span class="line">  -p 3000:3000 \</span><br><span class="line">  -e MONGO_URL=mongodb://db:27017/rocketchat \</span><br><span class="line">  -e ROOT_URL=http://localhost:3000 \</span><br><span class="line">  -v /opt/rocketchat/uploads:/app/uploads \</span><br><span class="line">  rocketchat/rocket.chat</span><br></pre></td></tr></table></figure><p>解释：</p><ul><li><code>--name rocketchat</code>：容器名称为<code>rocketchat</code>。</li><li><code>--link mongodb:db</code>：将MongoDB容器链接到Rocket.Chat容器，并在Rocket.Chat内部通过<code>db</code>主机名访问MongoDB。</li><li><code>-p 3000:3000</code>：将Rocket.Chat应用容器的3000端口映射到VPS的3000端口。</li><li><code>-e MONGO_URL=mongodb://db:27017/rocketchat</code>：指定Rocket.Chat使用MongoDB数据库。</li><li><code>-e ROOT_URL=http://localhost:3000</code>：指定Rocket.Chat的根URL。</li><li><code>-v /opt/rocketchat/uploads:/app/uploads</code>：将文件上传持久化存储在宿主机的 <code>/opt/rocketchat/uploads</code> 目录下。</li></ul><h4 id="3-3-验证容器是否运行成功"><a href="#3-3-验证容器是否运行成功" class="headerlink" title="3.3 验证容器是否运行成功"></a>3.3 验证容器是否运行成功</h4><p>使用以下命令检查容器的运行状态：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker ps</span><br></pre></td></tr></table></figure><p>你应该能看到 <code>mongodb</code> 和 <code>rocketchat</code> 两个容器正在运行。如果需要查看容器日志，可以使用：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker logs -f rocketchat</span><br></pre></td></tr></table></figure><h3 id="4-访问Rocket-Chat"><a href="#4-访问Rocket-Chat" class="headerlink" title="4. 访问Rocket.Chat"></a>4. 访问Rocket.Chat</h3><p>Rocket.Chat默认运行在VPS的 <code>3000</code> 端口。你可以通过浏览器访问以下URL来打开Rocket.Chat的Web界面：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://&lt;你的VPS_IP&gt;:3000</span><br></pre></td></tr></table></figure><p>例如，如果你的VPS的IP地址是 <code>192.168.1.100</code>，则访问：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.1.100:3000</span><br></pre></td></tr></table></figure><h3 id="5-Rocket-Chat的初始设置"><a href="#5-Rocket-Chat的初始设置" class="headerlink" title="5. Rocket.Chat的初始设置"></a>5. Rocket.Chat的初始设置</h3><p>首次访问时，你需要完成一些初始配置：</p><ol><li><strong>创建管理员账号</strong>：你需要设置管理员用户名、密码和邮箱地址。</li><li><strong>服务器配置</strong>：根据你的需求配置服务器的基本信息，如组织名称、服务器名等。</li><li><strong>邀请用户</strong>：你可以通过界面邀请其他用户加入聊天室。</li></ol><h3 id="6-配置域名和HTTPS（可选）"><a href="#6-配置域名和HTTPS（可选）" class="headerlink" title="6. 配置域名和HTTPS（可选）"></a>6. 配置域名和HTTPS（可选）</h3><p>为了使你的聊天室更专业、安全，你可以配置一个域名并启用HTTPS。假设你已经有一个域名，可以通过Nginx反向代理和Let’s Encrypt来配置HTTPS。</p><h4 id="6-1-安装Nginx"><a href="#6-1-安装Nginx" class="headerlink" title="6.1 安装Nginx"></a>6.1 安装Nginx</h4><p>首先，在VPS上安装Nginx：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt install nginx</span><br></pre></td></tr></table></figure><h4 id="6-2-配置Nginx反向代理"><a href="#6-2-配置Nginx反向代理" class="headerlink" title="6.2 配置Nginx反向代理"></a>6.2 配置Nginx反向代理</h4><p>创建一个Nginx配置文件来反向代理Rocket.Chat：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> nano /etc/nginx/sites-available/rocketchat</span><br></pre></td></tr></table></figure><p>在文件中添加以下内容：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">listen</span> <span class="number">80</span>;</span><br><span class="line">    <span class="attribute">server_name</span> yourdomain.com;</span><br><span class="line"></span><br><span class="line">    <span class="section">location</span> / &#123;</span><br><span class="line">        <span class="attribute">proxy_pass</span> http://localhost:3000/;</span><br><span class="line">        <span class="attribute">proxy_http_version</span> <span class="number">1</span>.<span class="number">1</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> Upgrade <span class="variable">$http_upgrade</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> Connection <span class="string">&quot;upgrade&quot;</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Forwarded-Proto <span class="variable">$scheme</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>将 <code>yourdomain.com</code> 替换为你的实际域名。</p><h4 id="6-3-启用配置并重启Nginx"><a href="#6-3-启用配置并重启Nginx" class="headerlink" title="6.3 启用配置并重启Nginx"></a>6.3 启用配置并重启Nginx</h4><p>启用配置并重启Nginx：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> <span class="built_in">ln</span> -s /etc/nginx/sites-available/rocketchat /etc/nginx/sites-enabled/</span><br><span class="line"><span class="built_in">sudo</span> systemctl restart nginx</span><br></pre></td></tr></table></figure><h4 id="6-4-安装Let’s-Encrypt证书"><a href="#6-4-安装Let’s-Encrypt证书" class="headerlink" title="6.4 安装Let’s Encrypt证书"></a>6.4 安装Let’s Encrypt证书</h4><p>使用Certbot安装Let’s Encrypt免费SSL证书：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt install certbot python3-certbot-nginx</span><br><span class="line"><span class="built_in">sudo</span> certbot --nginx -d yourdomain.com</span><br></pre></td></tr></table></figure><p>按照提示完成SSL证书的安装。配置成功后，Rocket.Chat将通过HTTPS安全连接提供服务。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 开源聊天系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[碎碎念念] 随波逐流</title>
      <link href="/Notepad/3890.html"/>
      <url>/Notepad/3890.html</url>
      
        <content type="html"><![CDATA[<!-- <div class="video-container">[up主专用，视频内嵌代码贴在这]</div><style>.video-container {    position: relative;    width: 100%;    padding-top: 56.25%; /* 16:9 aspect ratio (height/width = 9/16 * 100%) */}.video-container iframe {    position: absolute;    top: 0;    left: 0;    width: 100%;    height: 100%;}</style> --><p>白驹过隙，时光荏苒，转眼间我已步入三十好几的年纪。中年人的闲暇时光，似乎更愿意用来躺平与反思人生。然而，人生似乎并没有太多值得深思的内容。渐渐地，我开始接受宿命的安排，不再属于那些坚信努力能改变命运的少数派。这样的想法或许显得有些消极，但实事求是地说，它更接近现实：努力未必能奏效，但不努力则必然失败。</p><p>生活的真理不断提醒我们，要想迎接被眷顾的未来，自我奋斗是不可或缺的。然而，回顾历史，无数个努力奋斗的故事，最终也难免如蚍蜉撼树，令人心灰意冷。这让我失去了为那微乎其微的成功概率而搏斗的动力。激荡与平庸，终究都是短暂的一生，我意识到，最终追求的不过是一个轻松的心态。我的唯一心愿，便是能够成为一个随性的人——随波逐流，顺其自然，享受生活中的点滴，而不是被焦虑与压力所左右。</p><p><img src="https://i.111666.best/image/hTfsfAF7H0s5pjDdqKcmkL.jpg" alt="image"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> 碎碎念念 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>open-webui</title>
      <link href="/Notepad/18356.html"/>
      <url>/Notepad/18356.html</url>
      
        <content type="html"><![CDATA[<h3 id="open-webui"><a href="#open-webui" class="headerlink" title="open-webui"></a>open-webui</h3><p>Open WebUI 是一个可扩展、功能丰富且用户友好的自托管 WebUI，旨在完全离线运行。它支持各种 LLM 运行程序，包括 Ollama 和 OpenAI 兼容的 API。有关更多信息，请务必查看我们的 Open WebUI 文档。</p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>官方安装地址：<a href="https://docs.openwebui.com/getting-started/">https://docs.openwebui.com/getting-started/</a> 有两种安装方式，docker和源码。 熟悉docker的同学可以采用该方式。 本文以源码的形式进行安装。</p><h3 id="环境要求"><a href="#环境要求" class="headerlink" title="环境要求"></a>环境要求</h3><p>熟练使用python</p><p>🐰 Node.js &gt;&#x3D; 20.10</p><p>🐍 Python &gt;&#x3D; 3.11</p><h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">克隆代码</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/open-webui/open-webui.git</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> open-webui/</span><br><span class="line"></span><br><span class="line">拷贝.<span class="built_in">env</span>文件，可鼠标右键复制粘贴</span><br><span class="line"><span class="comment"># Copying required .env file</span></span><br><span class="line"><span class="built_in">cp</span> -RPp .env.example .<span class="built_in">env</span></span><br><span class="line"></span><br><span class="line">构建前端页面</span><br><span class="line"><span class="comment"># Building Frontend Using Node</span></span><br><span class="line">npm i</span><br><span class="line">npm run build</span><br><span class="line"></span><br><span class="line">构建后端</span><br><span class="line"><span class="comment"># Serving Frontend with the Backend</span></span><br><span class="line"><span class="built_in">cd</span> ./backend</span><br><span class="line">pip install -r requirements.txt -U</span><br><span class="line"></span><br><span class="line">启动服务</span><br><span class="line">linux or mac:bash start.sh</span><br><span class="line">windows:start_windows.bat</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://i.111666.best/image/9Z2Gm0QsdVbjTovgQ1Chjk.png" alt="image"></p><h3 id="访问"><a href="#访问" class="headerlink" title="访问"></a>访问</h3><p>打开地址：127.0.0.1:8000</p><p>第一次打开的时候，需要注册一个账号。（如admin&#x2F;admin） 册的第一个用户默认为管理员账号，以后注册的账号角色均为pending（待分配权限）。</p><h3 id="选择模型"><a href="#选择模型" class="headerlink" title="选择模型"></a>选择模型</h3><p><img src="https://i.111666.best/image/4RyYbD1wMNXqdIlTQgNBlD.png" alt="image"></p><h3 id="开始对话"><a href="#开始对话" class="headerlink" title="开始对话"></a>开始对话</h3><p><img src="https://i.111666.best/image/kq9GxpCxK8IDzfrN4ABGWx.png" alt="image"></p><h3 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h3><p>收工</p>]]></content>
      
      
      
        <tags>
            
            <tag> 大语言模型 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>无病呻吟</title>
      <link href="/Notepad/10218.html"/>
      <url>/Notepad/10218.html</url>
      
        <content type="html"><![CDATA[<!-- <div class="video-container">[up主专用，视频内嵌代码贴在这]</div><style>.video-container {    position: relative;    width: 100%;    padding-top: 56.25%; /* 16:9 aspect ratio (height/width = 9/16 * 100%) */}.video-container iframe {    position: absolute;    top: 0;    left: 0;    width: 100%;    height: 100%;}</style> --><hr><p><code>熬夜</code>，对我来说，是一种独特的享受。夜晚的氛围有种无法言喻的魅力，让我沉浸在一个完全不同的世界里。一个人静静地待在房间中，音乐在耳边轻轻流淌，窗外的黑夜和微弱的路灯交织成了一幅宁静的画面。没有白天的炫目阳光和嘈杂声响，一切都显得格外静谧，心情也变得格外舒缓。</p><p>在这样的深夜里，我仿佛进入了另一个自我。烦恼被暂时搁置，我尽情享受这段孤独的时光，仿佛与外界隔绝，所有的困扰都变得微不足道。</p><p>或许，这正是我逃避现实的方式——面对明天的未知与迷茫，我选择沉浸在这漫长的黑夜中，躲避黎明的到来。</p><p>…</p><p>当第一缕晨光悄悄探入房间，困意开始悄然而至，像是夜晚最后的余晖。</p><p>愿这片刻的宁静，能为即将到来的白昼带来一丝温暖。</p><p>晚安，世界。</p><p>哦，不，现在是早安了~</p><hr>]]></content>
      
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[Hexo] 用Gulp压缩博客</title>
      <link href="/Notepad/70e0c8d1.html"/>
      <url>/Notepad/70e0c8d1.html</url>
      
        <content type="html"><![CDATA[<!-- <div class="video-container">[up主专用，视频内嵌代码贴在这]</div><style>.video-container {    position: relative;    width: 100%;    padding-top: 56.25%; /* 16:9 aspect ratio (height/width = 9/16 * 100%) */}.video-container iframe {    position: absolute;    top: 0;    left: 0;    width: 100%;    height: 100%;}</style> --><h2 id="Gulp简介"><a href="#Gulp简介" class="headerlink" title="Gulp简介"></a>Gulp简介</h2><p>一个可以自动压缩 HTML、JS、CSS 文件、图片，<br>可以将 ES6 语法转换成 ES5，减少网络请求，同时降低网络负担</p><h3 id="准备环境"><a href="#准备环境" class="headerlink" title="准备环境"></a>准备环境</h3><p>首先全局安装 gulp</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --global gulp-cli</span><br></pre></td></tr></table></figure><p>安装压缩 <code>HTML</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install gulp-htmlclean --save-dev</span><br><span class="line">npm install --save gulp-html-minifier-terser</span><br></pre></td></tr></table></figure><p>安装压缩 CSS</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install gulp-clean-css --save-dev</span><br></pre></td></tr></table></figure><p>安装压缩 JS<br>这里我选择 gulp-uglify + gulp-babel，可以把 ES6 转换成 ES5，因为兼容所以选择</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install --save-dev gulp-uglify</span><br><span class="line">npm install --save-dev gulp-babel @babel/core @babel/preset-env</span><br></pre></td></tr></table></figure><p>插件都安装完毕后，在博客的根目录创建文件：<code>gulpfile.js</code><br>然后粘贴代码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> gulp = <span class="built_in">require</span>(<span class="string">&#x27;gulp&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> cleanCSS = <span class="built_in">require</span>(<span class="string">&#x27;gulp-clean-css&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> htmlmin = <span class="built_in">require</span>(<span class="string">&#x27;gulp-html-minifier-terser&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> htmlclean = <span class="built_in">require</span>(<span class="string">&#x27;gulp-htmlclean&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> uglify = <span class="built_in">require</span>(<span class="string">&#x27;gulp-uglify&#x27;</span>)</span><br><span class="line"><span class="keyword">var</span> babel = <span class="built_in">require</span>(<span class="string">&#x27;gulp-babel&#x27;</span>)</span><br><span class="line"><span class="comment">// 压缩js</span></span><br><span class="line">gulp.<span class="title function_">task</span>(<span class="string">&#x27;compress&#x27;</span>, <span class="function">() =&gt;</span></span><br><span class="line">  gulp.<span class="title function_">src</span>([<span class="string">&#x27;./public/**/*.js&#x27;</span>, <span class="string">&#x27;!./public/**/*.min.js&#x27;</span>])</span><br><span class="line">    .<span class="title function_">pipe</span>(<span class="title function_">babel</span>(&#123;</span><br><span class="line">      <span class="attr">presets</span>: [<span class="string">&#x27;@babel/preset-env&#x27;</span>]</span><br><span class="line">    &#125;))</span><br><span class="line">    .<span class="title function_">pipe</span>(<span class="title function_">uglify</span>().<span class="title function_">on</span>(<span class="string">&#x27;error&#x27;</span>, <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(e)</span><br><span class="line">    &#125;))</span><br><span class="line">    .<span class="title function_">pipe</span>(gulp.<span class="title function_">dest</span>(<span class="string">&#x27;./public&#x27;</span>))</span><br><span class="line">)</span><br><span class="line"><span class="comment">// 压缩css</span></span><br><span class="line">gulp.<span class="title function_">task</span>(<span class="string">&#x27;minify-css&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> gulp.<span class="title function_">src</span>([<span class="string">&#x27;./public/**/*.css&#x27;</span>])</span><br><span class="line">        .<span class="title function_">pipe</span>(<span class="title function_">cleanCSS</span>(&#123;</span><br><span class="line">            <span class="attr">compatibility</span>: <span class="string">&#x27;ie11&#x27;</span></span><br><span class="line">        &#125;))</span><br><span class="line">        .<span class="title function_">pipe</span>(gulp.<span class="title function_">dest</span>(<span class="string">&#x27;./public&#x27;</span>));</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 压缩html</span></span><br><span class="line">gulp.<span class="title function_">task</span>(<span class="string">&#x27;minify-html&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> gulp.<span class="title function_">src</span>(<span class="string">&#x27;./public/**/*.html&#x27;</span>)</span><br><span class="line">        .<span class="title function_">pipe</span>(<span class="title function_">htmlclean</span>())</span><br><span class="line">        .<span class="title function_">pipe</span>(<span class="title function_">htmlmin</span>(&#123;</span><br><span class="line">            <span class="attr">removeComments</span>: <span class="literal">true</span>,   <span class="comment">// 清除 html 注释</span></span><br><span class="line">            <span class="attr">collapseWhitespace</span>: <span class="literal">true</span>, <span class="comment">// 压缩 html</span></span><br><span class="line">            <span class="attr">collapseBooleanAttributes</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="comment">// 省略布尔属性的值，例如：&lt;input checked=&quot;true&quot;/&gt; ==&gt; &lt;input /&gt;</span></span><br><span class="line">            <span class="attr">removeEmptyAttributes</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="comment">// 删除所有空格作属性值，例如：&lt;input id=&quot;&quot; /&gt; ==&gt; &lt;input /&gt;</span></span><br><span class="line">            <span class="attr">removeScriptTypeAttributes</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="comment">// 删除&lt;script&gt;的type=&quot;text/javascript&quot;</span></span><br><span class="line">            <span class="attr">removeStyleLinkTypeAttributes</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="comment">// 删除&lt;style&gt;和&lt;link&gt;的 type=&quot;text/css&quot;</span></span><br><span class="line">            <span class="attr">minifyJS</span>: <span class="literal">true</span>, <span class="comment">// 压缩页面 JS</span></span><br><span class="line">            <span class="attr">minifyCSS</span>: <span class="literal">true</span>, <span class="comment">// 压缩页面 CSS</span></span><br><span class="line">            <span class="attr">minifyURLs</span>: <span class="literal">true</span> <span class="comment">// 压缩页面 URL</span></span><br><span class="line">        &#125;))</span><br><span class="line">        .<span class="title function_">pipe</span>(gulp.<span class="title function_">dest</span>(<span class="string">&#x27;./public&#x27;</span>))</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 运行gulp命令时依次执行以下任务</span></span><br><span class="line">gulp.<span class="title function_">task</span>(<span class="string">&#x27;default&#x27;</span>, gulp.<span class="title function_">parallel</span>(</span><br><span class="line">  <span class="string">&#x27;compress&#x27;</span>, <span class="string">&#x27;minify-css&#x27;</span>, <span class="string">&#x27;minify-html&#x27;</span></span><br><span class="line">))</span><br></pre></td></tr></table></figure><h3 id="使用压缩方法"><a href="#使用压缩方法" class="headerlink" title="使用压缩方法"></a>使用压缩方法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo cl; hexo g; gulp; hexo d</span><br></pre></td></tr></table></figure><h3 id="错误信息解析"><a href="#错误信息解析" class="headerlink" title="错误信息解析"></a>错误信息解析</h3><p><strong>Local gulp not found in ~\Desktop\xxx</strong></p><ul><li>这表示在 ~\Desktop\xxx 这个项目目录中，Gulp 工具没有被安装。</li></ul><p><strong>Try running: npm install gulp</strong></p><ul><li>这是一个建议，提示你可以通过运行 npm install gulp 来安装 Gulp，这样本地的 Gulp 工具就会被正确安装到项目的 node_modules 目录中。</li></ul><p>1.安装 Gulp</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install gulp</span><br></pre></td></tr></table></figure><p>2.检查项目的 package.json 文件</p><ul><li>确保你的项目的 package.json 文件中有 Gulp 的依赖。如果没有，你可以手动添加：</li></ul><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;devDependencies&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;gulp&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^4.0.2&quot;</span>  <span class="comment">// 你可以指定适合你的版本</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><hr><p><strong>如果你想从项目中删除 Gulp 和相关的依赖，可以按照以下步骤操作：</strong></p><ol><li>删除本地 <code>Gulp</code></li></ol><ul><li>在项目根目录下，打开终端（命令行），然后运行以下命令：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm uninstall gulp --save-dev</span><br></pre></td></tr></table></figure><ul><li>这会从 <code>node_modules</code> 文件夹和 <code>package.json</code> 的 <code>devDependencies</code> 中删除 Gulp。</li></ul><ol start="2"><li>删除 Gulp 插件</li></ol><ul><li>如果你安装了其他 Gulp 插件（如 gulp-clean-css、gulp-uglify 等），也可以通过以下命令逐个删除：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm uninstall gulp-clean-css gulp-uglify gulp-htmlmin gulp-sass --save-dev</span><br></pre></td></tr></table></figure><ul><li>根据你实际安装的插件，调整命令中的插件名称。</li></ul><ol start="3"><li>删除全局 Gulp（如果安装了全局版本）</li></ol><ul><li>如果你全局安装了 Gulp（通过 -g 参数），可以运行以下命令卸载全局 Gulp：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm uninstall -g gulp</span><br></pre></td></tr></table></figure><ol start="4"><li>删除 Gulp 配置文件</li></ol><ul><li>如果你的项目中有 gulpfile.js 文件，可以将其删除。如果你不再使用 Gulp，这个文件是多余的。</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">rm</span> gulpfile.js</span><br></pre></td></tr></table></figure><ol start="5"><li>删除其他相关文件（可选）</li></ol><blockquote><p>如果你使用了 <code>Gulp</code> 的任务配置文件或其他相关文件，可以根据需要删除它们。一般来说，这些文件包括：</p><blockquote><p>gulpfile.js<br>任何与 Gulp 相关的配置文件</p></blockquote></blockquote><ol start="6"><li>清理 npm 缓存（可选）<br>虽然通常不是必需的，但如果你希望清理缓存以释放空间，可以运行以下命令：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm cache clean --force</span><br></pre></td></tr></table></figure><ol start="7"><li>确保更新 package.json</li></ol><ul><li>在卸载 Gulp 和插件之后，package.json 文件中的 devDependencies 部分会自动更新，删除相关的 Gulp 和插件条目。你可以手动检查 package.json，确保不再列出这些依赖。</li></ul><ol start="8"><li>确保项目正常运行</li></ol><ul><li>在删除 Gulp 及其相关插件后，确保你的项目可以正常构建和运行。如果你之前的构建任务依赖于 Gulp，可能需要重新配置构建流程或者使用其他工具来替代 Gulp。</li></ul><ol start="9"><li>使用命令行来列出已安装的 npm 包：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm list --depth=0</span><br></pre></td></tr></table></figure><ul><li>这个命令会列出所有直接安装的包（包括 Hexo 插件）及其版本号。</li></ul><ol start="10"><li>卸载未使用的插件</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm uninstall &lt;plugin-name&gt; --save</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[Hexo] 博客</title>
      <link href="/Notepad/fc655f6c.html"/>
      <url>/Notepad/fc655f6c.html</url>
      
        <content type="html"><![CDATA[<h3 id="Hexo-GitHub-部署指南"><a href="#Hexo-GitHub-部署指南" class="headerlink" title="Hexo + GitHub 部署指南"></a>Hexo + GitHub 部署指南</h3><hr><h4 id="1-软件支持"><a href="#1-软件支持" class="headerlink" title="1. 软件支持"></a>1. 软件支持</h4><ul><li><strong>Node：</strong><a href="https://nodejs.org/en">官网</a>，<a href="https://zhoudx.lanzouk.com/iCvtz29k9zbc">蓝奏云</a></li><li><strong>Git：</strong> <a href="https://git-scm.com/download/win">官网</a>，<a href="https://zhoudx.lanzouk.com/i3S3f29k9yfa">蓝奏云</a></li><li><strong>VSCode：</strong> <a href="https://code.visualstudio.com/">官网</a>，<a href="https://zhoudx.lanzouk.com/iZJee29k9wjc">蓝奏云</a></li></ul><h4 id="2-安装-Node"><a href="#2-安装-Node" class="headerlink" title="2. 安装 Node"></a>2. 安装 Node</h4><p>打开 <code>Node 官网</code>，下载适合你系统的 Node 安装程序。下载后安装，建议使用默认目录 <code>C:/Program Files/nodejs/</code>。</p><p>安装完成后，检查是否安装成功。按下 <code>Win + R</code> 键，输入 <code>CMD</code>，然后回车，打开 CMD 窗口，执行 <code>node -v</code> 命令，看到版本信息则说明安装成功。</p><p>修改 npm 源。npm 下载模块默认从国外服务器下载，速度较慢，建议配置成华为云镜像源。打开 CMD 窗口，运行如下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> registry https://mirrors.huaweicloud.com/repository/npm/</span><br></pre></td></tr></table></figure><h4 id="3-安装-Git"><a href="#3-安装-Git" class="headerlink" title="3. 安装 Git"></a>3. 安装 Git</h4><p>进入 <a href="https://git-scm.com/download/win">Git 官网</a> 下载适合你系统的安装程序，下载后傻瓜式安装即可，建议使用默认目录 <code>C:/Program Files/Git</code>。<br>安装后，你可以在 <strong>开始菜单</strong> 找到以下工具：<br> <code>Git CMD</code>：Windows 命令行的指令风格<br> <code>Git Bash</code>：Linux 系统的指令风格<code>（建议使用）</code><br> <code>Git GUI</code>：图形化界面（新手学习不建议使用）</p><h4 id="4-配置-Git-密钥并连接至-GitHub"><a href="#4-配置-Git-密钥并连接至-GitHub" class="headerlink" title="4. 配置 Git 密钥并连接至 GitHub"></a>4. 配置 Git 密钥并连接至 GitHub</h4><p>常用 <code>Git</code> 命令：</p><p>查看所有配置：<code>git config -l</code><br>查看系统配置：<code>git config --system --list</code><br>查看用户（全局）配置：<code>git config --global --list</code></p><p>配置用户名和邮箱：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;你的用户名&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;你的邮箱&quot;</span></span><br></pre></td></tr></table></figure><blockquote><p>通过 <code>git config -l</code> 检查是否配置成功。</p></blockquote><h4 id="5-配置公钥连接-GitHub"><a href="#5-配置公钥连接-GitHub" class="headerlink" title="5. 配置公钥连接 GitHub"></a>5. 配置公钥连接 GitHub</h4><p>生成 SSH 密钥：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;你的邮箱&quot;</span></span><br></pre></td></tr></table></figure><ul><li>提示 <code>Enter file in which to save the key</code> 时直接回车，新手不推荐设置密钥密码。</li><li>打开 <code>C:\Users\Administrator\.ssh</code> 文件夹，会看到以下文件：<ul><li><code>id_rsa（私钥）</code></li><li><code>id_rsa.pub（公钥）</code></li></ul></li><li>用记事本打开 <code>id_rsa.pub</code> 文件，复制里面的内容，然后在 <code>GitHub</code> 中配置 <code>SSH</code> 密钥。</li></ul><p>测试连接github是否成功，输入以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>第一次连接会提示 <code>Are you sure you want to continue connecting (yes/no/[fingerprint])?</code>，输入 <code>yes</code> 即可。如果看到连接到账户的信息，说明配置成功。</p><h4 id="6-安装-Hexo"><a href="#6-安装-Hexo" class="headerlink" title="6. 安装 Hexo"></a>6. 安装 Hexo</h4><p>在 <code>Hexo</code> 根目录使用 <code>Git Bash</code> 中输入如下命令安装 Hexo：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli &amp;&amp; hexo -v</span><br></pre></td></tr></table></figure><blockquote><p>安装完成后，输入 <code>hexo -v</code> 验证是否安装成功。</p></blockquote><h4 id="7-初始化-Hexo-项目并安装依赖"><a href="#7-初始化-Hexo-项目并安装依赖" class="headerlink" title="7. 初始化 Hexo 项目并安装依赖"></a>7. 初始化 Hexo 项目并安装依赖</h4><p>初始化 Hexo 项目：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo init blog-demo</span><br><span class="line"><span class="built_in">cd</span> blog-demo</span><br><span class="line">npm i</span><br></pre></td></tr></table></figure><p>项目结构说明：</p><blockquote><p>node_modules：依赖包<br>scaffolds：生成文章的模板<br>source：存放文章的目录<br>themes：主题<br>.npmignore：发布时忽略的文件（可忽略）<br>_config.landscape.yml：主题配置文件<br>config.yml：博客配置文件<br>package.json：项目名称、描述、版本、运行和开发等信息</p></blockquote><h4 id="启动项目："><a href="#启动项目：" class="headerlink" title="启动项目："></a>启动项目：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo cl &amp;&amp; hexo s</span><br></pre></td></tr></table></figure><p><strong>打开浏览器，输入地址 <code>http://localhost:4000/</code>，如果看到预期效果，则说明博客已成功构建。</strong></p><h4 id="8-将静态博客挂载到-GitHub-Pages"><a href="#8-将静态博客挂载到-GitHub-Pages" class="headerlink" title="8. 将静态博客挂载到 GitHub Pages"></a>8. 将静态博客挂载到 GitHub Pages</h4><p>安装 Hexo 部署插件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>编辑文章并预览：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo cl; hexo s</span><br></pre></td></tr></table></figure><p>确认无误后使用以下命令，将本地文章推送至GitHub仓库即可：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo cl; hexo g; hexo d</span><br></pre></td></tr></table></figure><h4 id="8-Vscode-终端首次执行报错解决"><a href="#8-Vscode-终端首次执行报错解决" class="headerlink" title="8. Vscode 终端首次执行报错解决"></a>8. Vscode 终端首次执行报错解决</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Set-ExecutionPolicy RemoteSigned</span><br></pre></td></tr></table></figure><blockquote><p>请用 <code>管理员模式</code> 打开 <code>Windows PowerShell</code> 输入代码即可，按 Y 回车。</p></blockquote><hr><h4 id="9-安装butterfly主题"><a href="#9-安装butterfly主题" class="headerlink" title="9. 安装butterfly主题"></a>9. 安装<code>butterfly</code>主题</h4><p>在你的 <code>Hexo</code> 根目录安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> -b master https://gitee.com/immyw/hexo-theme-butterfly.git themes/butterfly</span><br></pre></td></tr></table></figure><p>应用主题：</p><ul><li>修改 <code>Hexo</code> 根目录下的 <code>_config.yml</code>，把主题改为 <code>butterfly</code></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: butterfly</span><br></pre></td></tr></table></figure><p>安装插件：</p><ul><li>如果你没有 <code>pug</code> 以及 <code>stylus</code> 的渲染器，请下载安装：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br></pre></td></tr></table></figure><ul><li>在 <code>hexo</code> 的根目录创建一个文件 <code>_config.butterfly.yml</code>，并把 <code>butterfly</code> 主题目录的 <code>_config.yml</code> 内容复制到 <code>_config.butterfly.yml</code> 去。( 注意: 复制的是 <code>butterfly</code> 主题的 <code>_config.yml</code> ，而不是 <code>hexo</code> 的 <code>_config.yml</code>)</li><li>注意： 以后只需要在 <code>_config.butterfly.yml</code> 进行配置就行。</li><li>如果使用了 <code>_config.butterfly.yml</code>， 配置主题的 <code>_config.yml</code> 将不会有效果。</li></ul><blockquote><p>注意： 不要把 <code>butterfly</code> 主题目录的 <code>_config.yml</code> 删掉。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[Hexo] 免费图床</title>
      <link href="/Notepad/3873c0b1.html"/>
      <url>/Notepad/3873c0b1.html</url>
      
        <content type="html"><![CDATA[<!-- <div class="video-container">[up主专用，视频内嵌代码贴在这]</div><style>.video-container {    position: relative;    width: 100%;    padding-top: 56.25%; /* 16:9 aspect ratio (height/width = 9/16 * 100%) */}.video-container iframe {    position: absolute;    top: 0;    left: 0;    width: 100%;    height: 100%;}</style> --><h1 id="一些常用免费图床汇总-整理"><a href="#一些常用免费图床汇总-整理" class="headerlink" title="一些常用免费图床汇总(整理)"></a>一些常用免费图床汇总(整理)</h1><h4 id="有条件还是推荐自己搭建一个，毕竟较隐私图片和一些二维码图等，自己搭不会容易挂。然后也算是因为博客文章等用免费的走过一些弯路，毕竟一定时间精力等因素限制范围内，免费的永远是最贵的！"><a href="#有条件还是推荐自己搭建一个，毕竟较隐私图片和一些二维码图等，自己搭不会容易挂。然后也算是因为博客文章等用免费的走过一些弯路，毕竟一定时间精力等因素限制范围内，免费的永远是最贵的！" class="headerlink" title="有条件还是推荐自己搭建一个，毕竟较隐私图片和一些二维码图等，自己搭不会容易挂。然后也算是因为博客文章等用免费的走过一些弯路，毕竟一定时间精力等因素限制范围内，免费的永远是最贵的！"></a>有条件还是推荐自己搭建一个，毕竟较隐私图片和一些二维码图等，自己搭不会容易挂。然后也算是因为博客文章等用免费的走过一些弯路，毕竟一定时间精力等因素限制范围内，免费的永远是最贵的！</h4><ul><li><strong>免费的，还是推荐临时用或不重要图片资源。</strong></li></ul><hr><p><strong>GitHub图片压缩工具：</strong><a href="https://zhoudx.lanzouk.com/iYWpT2a4zhze">https://zhoudx.lanzouk.com/iYWpT2a4zhze</a></p><p><strong>聚合图床 - 免费无限图片上传：</strong><a href="https://www.superbed.cn/">https://www.superbed.cn/</a></p><p><strong>魔法师图床：</strong><a href="https://tc.mofashi.ltd/">https://tc.mofashi.ltd/</a></p><p><strong>ImgBB — 免费图片存取&#x2F;上传图片：</strong><a href="https://imgbb.com/">https://imgbb.com/</a></p><p><a href="https://www.toopic.cn/dnbz/?q=--152--.html">鬼刀壁纸</a></p><p><strong>16图床，永久免费，无需登录的图床：</strong><a href="https://111666.best/">https://111666.best/</a></p><p><strong>路过图床：</strong><a href="https://imgse.com/">https://imgse.com/</a></p><p><strong>img131图床：</strong><a href="https://img.131213.xyz/">https://img.131213.xyz/</a></p><hr>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[Hexo] 文章轮播</title>
      <link href="/Notepad/fe562d3d.html"/>
      <url>/Notepad/fe562d3d.html</url>
      
        <content type="html"><![CDATA[<!-- <div class="video-container">[up主专用，视频内嵌代码贴在这]</div><style>.video-container {    position: relative;    width: 100%;    padding-top: 56.25%; /* 16:9 aspect ratio (height/width = 9/16 * 100%) */}.video-container iframe {    position: absolute;    top: 0;    left: 0;    width: 100%;    height: 100%;}</style> --><h2 id="关于文章轮播图"><a href="#关于文章轮播图" class="headerlink" title="关于文章轮播图"></a>关于文章轮播图</h2><p>本项目是对<code>冰卡诺老师</code>写的教程：基于<code>Butterfly主题</code>的轮播手动置顶文章进行重构，精简了部分样式。适配<code>pjax</code>。</p><h2 id="插件教程"><a href="#插件教程" class="headerlink" title="插件教程"></a>插件教程</h2><ol><li><p><strong>安装插件,在博客根目录[Blogroot]下打开终端，运行以下指令：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-butterfly-swiper --save</span><br></pre></td></tr></table></figure></li><li><p><strong>添加配置信息，以下为写法示例</strong></p></li></ol><ul><li><strong>在站点配置文件<code>_config.yml</code>或者主题配置文件<code>_config.butterfly.yml</code>中添加。</strong><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># hexo-butterfly-swiper</span></span><br><span class="line"><span class="comment"># see https://akilar.top/posts/8e1264d1/</span></span><br><span class="line"><span class="attr">swiper:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment"># 开关</span></span><br><span class="line">  <span class="attr">priority:</span> <span class="number">5</span> <span class="comment">#过滤器优先权</span></span><br><span class="line">  <span class="attr">enable_page:</span> <span class="string">all</span> <span class="comment"># 应用页面</span></span><br><span class="line">  <span class="attr">timemode:</span> <span class="string">date</span> <span class="comment">#date/updated</span></span><br><span class="line">  <span class="attr">layout:</span> <span class="comment"># 挂载容器类型</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">id</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">recent-posts</span></span><br><span class="line">    <span class="attr">index:</span> <span class="number">0</span></span><br><span class="line">  <span class="attr">default_descr:</span> <span class="string">再怎么看我也不知道怎么描述它的啦！</span></span><br><span class="line">  <span class="attr">swiper_css:</span> <span class="string">https://npm.elemecdn.com/hexo-butterfly-swiper/lib/swiper.min.css</span> <span class="comment">#swiper css依赖</span></span><br><span class="line">  <span class="attr">swiper_js:</span> <span class="string">https://npm.elemecdn.com/hexo-butterfly-swiper/lib/swiper.min.js</span> <span class="comment">#swiper js依赖</span></span><br><span class="line">  <span class="attr">custom_css:</span> <span class="string">https://npm.elemecdn.com/hexo-butterfly-swiper/lib/swiperstyle.css</span> <span class="comment"># 适配主题样式补丁</span></span><br><span class="line">  <span class="attr">custom_js:</span> <span class="string">https://npm.elemecdn.com/hexo-butterfly-swiper/lib/swiper_init.js</span> <span class="comment"># swiper初始化方法</span></span><br></pre></td></tr></table></figure></li></ul><ol start="3"><li><strong>参数释义</strong><table><thead><tr><th>参数</th><th>备选值&#x2F;类型</th><th>释义</th></tr></thead><tbody><tr><td>priority</td><td>number</td><td>【可选】过滤器优先级，数值越小，执行越早，默认为10，选填</td></tr><tr><td>enable</td><td>true&#x2F;false</td><td>【必选】控制开关</td></tr><tr><td>enable_page</td><td>path&#x2F;all</td><td>【可选】填写想要应用的页面的相对路径（即路由地址）,如根目录就填’&#x2F;‘,分类页面就填’&#x2F;categories&#x2F;‘。若要应用于所有页面，就填’all’，默认为all</td></tr><tr><td>timemode</td><td>date&#x2F;updated</td><td>【可选】时间显示，date为显示创建日期，updated为显示更新日期,默认为date</td></tr><tr><td>layout.type</td><td>id&#x2F;class</td><td>【可选】挂载容器类型，填写id或class，不填则默认为id</td></tr><tr><td>layout.name</td><td>text</td><td>【必选】挂载容器名称</td></tr><tr><td>layout.index</td><td>0和正整数</td><td>【可选】前提是layout.type为class，因为同一页面可能有多个class，此项用来确认究竟排在第几个顺位</td></tr><tr><td>default_descr</td><td>text</td><td>默认文章描述</td></tr><tr><td>swiper_css</td><td>url</td><td>【可选】自定义的swiper依赖项css链接</td></tr><tr><td>swiper_js</td><td>url</td><td>【可选】自定义的swiper依赖项加js链接</td></tr><tr><td>custom_css</td><td>url</td><td>【可选】适配主题样式补丁</td></tr><tr><td>custom_js</td><td>url</td><td>【可选】swiper初始化方法</td></tr></tbody></table></li></ol><h1 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h1><ul><li><strong>在文章的<code>front_matter</code>中添加<code>swiper_index</code>配置项即可。</strong><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 文章标题</span><br><span class="line">date: 创建日期</span><br><span class="line">updated: 更新日期</span><br><span class="line">cover: 文章封面</span><br><span class="line">description: 文章描述</span><br><span class="line"><span class="section">swiper<span class="emphasis">_index: 1 #置顶轮播图顺序，非负整数，数字越大越靠前</span></span></span><br><span class="line"><span class="emphasis"><span class="section">---</span></span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[Hexo] Chenmm`s</title>
      <link href="/Notepad/a108f7a7.html"/>
      <url>/Notepad/a108f7a7.html</url>
      
        <content type="html"><![CDATA[<!-- <div class="video-container">[up主专用，视频内嵌代码贴在这]</div><style>.video-container {    position: relative;    width: 100%;    padding-top: 56.25%; /* 16:9 aspect ratio (height/width = 9/16 * 100%) */}.video-container iframe {    position: absolute;    top: 0;    left: 0;    width: 100%;    height: 100%;}</style> --><h2 id="碎碎念念"><a href="#碎碎念念" class="headerlink" title="碎碎念念"></a>碎碎念念</h2><hr><table><thead><tr><th>属性</th><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>title:</td><td>xxx日记博客</td><td># 页面标题</td></tr><tr><td>cover:</td><td>‘url’</td><td># 缩略图</td></tr><tr><td>swiper_index:</td><td>10</td><td># 首页轮播图索引</td></tr><tr><td>top_group_index:</td><td>10</td><td># 首页卡片组索引</td></tr><tr><td>background:</td><td>‘#fff’</td><td># 页面背景色</td></tr><tr><td>date:</td><td>2024-09-07 09:00:00</td><td># 创建日期</td></tr><tr><td>updated:</td><td></td><td># 更新日期</td></tr><tr><td>tags:</td><td></td><td># 文章标签</td></tr><tr><td>categories:</td><td></td><td># 文章分类</td></tr><tr><td>keywords:</td><td></td><td># 关键字</td></tr><tr><td>description:</td><td></td><td># 页面描述</td></tr><tr><td>top:</td><td></td><td># 置顶标记</td></tr><tr><td>top_img:</td><td></td><td># 顶部图片</td></tr><tr><td>comments:</td><td></td><td># 显示评论(默认true)</td></tr><tr><td>toc:</td><td></td><td># 显示 TOC（默认设置）</td></tr><tr><td>toc_number:</td><td></td><td># TOC 序号（默认设置）</td></tr><tr><td>toc_style_simple:</td><td></td><td># 简洁模式 TOC</td></tr><tr><td>copyright:</td><td></td><td># 版权模块（默认设置）</td></tr><tr><td>copyright_author:</td><td></td><td># 版权作者</td></tr><tr><td>copyright_author_href:</td><td></td><td># 版权作者链接</td></tr><tr><td>copyright_url:</td><td></td><td># 版权链接</td></tr><tr><td>copyright_info:</td><td></td><td># 版权声明</td></tr><tr><td>mathjax:</td><td></td><td># 显示 MathJax（mathjax.per_page 为 false 时配置）</td></tr><tr><td>katex:</td><td></td><td># 显示 KaTeX（katex.per_page 为 false 时配置）</td></tr><tr><td>aplayer:</td><td></td><td># 加载 aplayer（参见音乐配置）</td></tr><tr><td>highlight_shrink:</td><td></td><td># 代码框是否展开（true&#x2F;false）</td></tr><tr><td>aside:</td><td></td><td># 显示侧边栏（默认 true）</td></tr><tr><td>ai:</td><td></td><td># AI 摘要</td></tr></tbody></table><hr>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[Hexo] 主题背景一图流</title>
      <link href="/Notepad/ad420578.html"/>
      <url>/Notepad/ad420578.html</url>
      
        <content type="html"><![CDATA[<h2 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h2><blockquote><p>本文会详细介绍其修改过程。</p></blockquote><p><img src="https://img.131213.xyz/api/cfile/AgACAgUAAx0Eflp52gACHUhm281XL3yJdAABTiTw6FqdsgcOF58AAvm-MRs9ztlWrMnvhfjEctQBAAMCAAN5AAM2BA" alt="bj.png"></p><h3 id="主题配置"><a href="#主题配置" class="headerlink" title="主题配置"></a>主题配置</h3><blockquote><p>修改 <code>Butterfly</code> 的配置文件 <code>_config.butterfly.yml</code>。<br>编辑 <code>index_img</code>、<code>index_top_img_height</code>、<code>background</code>、<code>footer_bg</code>、<code>mask.header</code> 选项。<br>设置网站背景，将主页顶部图和页脚背景改为透明，调整主页顶部图高度，移除顶部图的黑色半透遮罩。<br><strong>(需要将示例地址替换为自己的图片地址。)</strong></p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># The banner image of home page</span></span><br><span class="line"><span class="attr">index_img:</span> <span class="string">transparent</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The height of top_img, eg: 300px/300em/300rem (主頁top_img高度)</span></span><br><span class="line"><span class="attr">index_top_img_height:</span> <span class="string">400px</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The formal of image: url(本地或者网络/xxx.jpg)</span></span><br><span class="line"><span class="attr">background:</span> <span class="string">url(/img/background.jpg)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Footer Background</span></span><br><span class="line"><span class="attr">footer_bg:</span> <span class="string">transparent</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Add mask to header or footer (为 header 或 footer 添加黑色半透遮罩)</span></span><br><span class="line"><span class="attr">mask:</span></span><br><span class="line">  <span class="attr">header:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><h3 id="引入相关样式"><a href="#引入相关样式" class="headerlink" title="引入相关样式"></a>引入相关样式</h3><ul><li>新建一个文件，位于 <code>source/css/modify.styl</code>，并增加以下内容。</li><li>(此处只是举例，也可以使用已有的样式文件。)</li></ul><figure class="highlight styl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">  <span class="keyword">@import</span> <span class="string">&#x27;nib&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 顶部图</span></span><br><span class="line"><span class="selector-id">#page-header</span></span><br><span class="line">  <span class="attribute">background</span>: transparent <span class="meta">!important</span></span><br><span class="line"></span><br><span class="line">  &amp;<span class="selector-class">.post-bg</span>, &amp;<span class="selector-class">.not-home-page</span></span><br><span class="line">    <span class="attribute">height</span>: <span class="number">280px</span> <span class="meta">!important</span></span><br><span class="line">  <span class="selector-id">#post-info</span></span><br><span class="line">    <span class="attribute">bottom</span>: <span class="number">40px</span> <span class="meta">!important</span></span><br><span class="line">    <span class="attribute">text-align</span>: center</span><br><span class="line">  <span class="selector-id">#page-site-info</span></span><br><span class="line">    <span class="attribute">top</span>: <span class="number">140px</span> <span class="meta">!important</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">max-width</span>: <span class="number">768px</span>)</span><br><span class="line">    &amp;.not-home-page</span><br><span class="line">      <span class="attribute">height</span>: <span class="number">200px</span> !important</span><br><span class="line">    #post-info</span><br><span class="line">      bottom: <span class="number">10px</span> !important</span><br><span class="line">    #page-site-info</span><br><span class="line">      top: <span class="number">100px</span> !important</span><br><span class="line"></span><br><span class="line">.top-img</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">250px</span></span><br><span class="line">  margin: -<span class="number">50px</span> -<span class="number">40px</span> <span class="number">50px</span></span><br><span class="line">  border-top-left-radius: inherit</span><br><span class="line">  border-top-right-radius: inherit</span><br><span class="line">  background-position: center center</span><br><span class="line">  background-size: cover</span><br><span class="line">  transition: all <span class="number">0.3s</span></span><br><span class="line"></span><br><span class="line">  @media screen <span class="keyword">and</span> (<span class="attribute">max-width</span>: <span class="number">768px</span>)</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">230px</span></span><br><span class="line">    margin: -<span class="number">36px</span> -<span class="number">14px</span> <span class="number">36px</span></span><br><span class="line"></span><br><span class="line">  [data-theme=&#x27;dark&#x27;] &amp;</span><br><span class="line">    filter: brightness(<span class="number">0.8</span>)</span><br><span class="line"></span><br><span class="line">// 页脚</span><br><span class="line">#footer:before</span><br><span class="line">  background-color: alpha(#FFF, .<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line">  [data-theme=&#x27;dark&#x27;] &amp;</span><br><span class="line">    background-color: alpha(#<span class="number">000</span>, .<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line">#footer-wrap, #footer-wrap a</span><br><span class="line">  <span class="attribute">color</span>: #<span class="number">111</span></span><br><span class="line">  transition: unset</span><br><span class="line"></span><br><span class="line">  [data-theme=&#x27;dark&#x27;] &amp;</span><br><span class="line">    <span class="attribute">color</span>: var(--light-grey)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="修改-Butterfly-的配置文件-config-butterfly-yml，在-inject-head-选项引入样式"><a href="#修改-Butterfly-的配置文件-config-butterfly-yml，在-inject-head-选项引入样式" class="headerlink" title="修改 Butterfly 的配置文件 _config.butterfly.yml，在 inject.head 选项引入样式"></a>修改 <code>Butterfly</code> 的配置文件 <code>_config.butterfly.yml</code>，在 <code>inject.head</code> 选项引入样式</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">inject:</span></span><br><span class="line">  <span class="attr">head:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;link</span> <span class="string">rel=&quot;stylesheet&quot;</span> <span class="string">href=&quot;/css/modify.css&quot;&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>Hexo 会将 Stylus 渲染成 CSS 文件，所以此处应为 <code>modify.css</code>。</p></blockquote><h3 id="增加插件脚本"><a href="#增加插件脚本" class="headerlink" title="增加插件脚本"></a>增加插件脚本</h3><blockquote><p>因为使用了 <code>cheerio</code> 来解析 <code>HTML</code>，所以需要先安装此依赖。</p></blockquote><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install cheerio</span><br></pre></td></tr></table></figure><ul><li>在hexo-blog&#x2F;source&#x2F;新建一个文件，位于 <code>scripts/modify.js</code>，并增加以下内容。</li><li>(此处只是举例，也可以使用已有的插件脚本文件。)</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&#x27;use strict&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> &#123; filter &#125; = hexo.<span class="property">extend</span>;</span><br><span class="line"><span class="keyword">const</span> cheerio = <span class="built_in">require</span>(<span class="string">&#x27;cheerio&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 在页面插入新顶部图</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">cheerio.Root</span>&#125; $ Root</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">insertTopImg</span>(<span class="params">$</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> header = $(<span class="string">&#x27;#page-header&#x27;</span>);</span><br><span class="line">    <span class="keyword">if</span> (header.<span class="property">length</span> === <span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">const</span> background = header.<span class="title function_">css</span>(<span class="string">&#x27;background-image&#x27;</span>);</span><br><span class="line">    <span class="keyword">if</span> (!background) <span class="keyword">return</span>;</span><br><span class="line">    $(<span class="string">&#x27;#post, #page, #archive, #tag, #category&#x27;</span>).<span class="title function_">prepend</span>(<span class="string">`&lt;div class=&quot;top-img&quot; style=&quot;background-image: <span class="subst">$&#123;background&#125;</span>;&quot;&gt;&lt;/div&gt;`</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 修改 HTML</span></span><br><span class="line">filter.<span class="title function_">register</span>(<span class="string">&#x27;after_render:html&#x27;</span>, <span class="function">(<span class="params">str, data</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> $ = cheerio.<span class="title function_">load</span>(str, &#123;</span><br><span class="line">        <span class="attr">decodeEntities</span>: <span class="literal">false</span></span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="title function_">insertTopImg</span>($);</span><br><span class="line">    <span class="keyword">return</span> $.<span class="title function_">html</span>();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h1 id="大功告成"><a href="#大功告成" class="headerlink" title="大功告成"></a>大功告成</h1><blockquote><p>👏 恭喜你完成了修改，可以使用以下命令进行预览。</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo cl; hexo s</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[Hexo] + Butterfly 博客个人卡片渐变色</title>
      <link href="/Notepad/15edad24.html"/>
      <url>/Notepad/15edad24.html</url>
      
        <content type="html"><![CDATA[<h3 id="个人卡片实现渐变色的代码："><a href="#个人卡片实现渐变色的代码：" class="headerlink" title="个人卡片实现渐变色的代码："></a>个人卡片实现渐变色的代码：</h3><h4 id="在主题文件夹下新建一个css文件，粘贴以下代码"><a href="#在主题文件夹下新建一个css文件，粘贴以下代码" class="headerlink" title="在主题文件夹下新建一个css文件，粘贴以下代码"></a>在主题文件夹下新建一个css文件，粘贴以下代码</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 侧边栏个人信息卡片动态渐变色 */</span></span><br><span class="line"><span class="selector-id">#aside-content</span> &gt; <span class="selector-class">.card-widget</span><span class="selector-class">.card-info</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(</span><br><span class="line">    -<span class="number">45deg</span>,</span><br><span class="line">    <span class="number">#e8d8b9</span>,</span><br><span class="line">    <span class="number">#eccec5</span>,</span><br><span class="line">    <span class="number">#a3e9eb</span>,</span><br><span class="line">    <span class="number">#bdbdf0</span>,</span><br><span class="line">    <span class="number">#eec1ea</span></span><br><span class="line">  );</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">5px</span> <span class="built_in">rgb</span>(<span class="number">66</span>, <span class="number">68</span>, <span class="number">68</span>);</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">background-size</span>: <span class="number">400%</span> <span class="number">400%</span>;</span><br><span class="line">  -webkit-<span class="attribute">animation</span>: Gradient <span class="number">10s</span> ease infinite;</span><br><span class="line">  -moz-<span class="attribute">animation</span>: Gradient <span class="number">10s</span> ease infinite;</span><br><span class="line">  <span class="attribute">animation</span>: Gradient <span class="number">10s</span> ease infinite <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@-webkit-keyframes</span> Gradient &#123;</span><br><span class="line">  <span class="number">0%</span> &#123;</span><br><span class="line">    <span class="attribute">background-position</span>: <span class="number">0%</span> <span class="number">50%</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">50%</span> &#123;</span><br><span class="line">    <span class="attribute">background-position</span>: <span class="number">100%</span> <span class="number">50%</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">100%</span> &#123;</span><br><span class="line">    <span class="attribute">background-position</span>: <span class="number">0%</span> <span class="number">50%</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@-moz-keyframes</span> Gradient &#123;</span><br><span class="line">  <span class="number">0%</span> &#123;</span><br><span class="line">    <span class="attribute">background-position</span>: <span class="number">0%</span> <span class="number">50%</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">50%</span> &#123;</span><br><span class="line">    <span class="attribute">background-position</span>: <span class="number">100%</span> <span class="number">50%</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">100%</span> &#123;</span><br><span class="line">    <span class="attribute">background-position</span>: <span class="number">0%</span> <span class="number">50%</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@keyframes</span> Gradient &#123;</span><br><span class="line">  <span class="number">0%</span> &#123;</span><br><span class="line">    <span class="attribute">background-position</span>: <span class="number">0%</span> <span class="number">50%</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">50%</span> &#123;</span><br><span class="line">    <span class="attribute">background-position</span>: <span class="number">100%</span> <span class="number">50%</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">100%</span> &#123;</span><br><span class="line">    <span class="attribute">background-position</span>: <span class="number">0%</span> <span class="number">50%</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 黑夜模式适配 */</span></span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span> <span class="selector-id">#aside-content</span> &gt; <span class="selector-class">.card-widget</span><span class="selector-class">.card-info</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#191919ee</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 个人信息Follow me按钮 */</span></span><br><span class="line"><span class="selector-id">#aside-content</span> &gt; <span class="selector-class">.card-widget</span><span class="selector-class">.card-info</span> &gt; <span class="selector-id">#card-info-btn</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#3eb8be</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">8px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="引入自己新建的-css-文件"><a href="#引入自己新建的-css-文件" class="headerlink" title="引入自己新建的 css 文件"></a>引入自己新建的 <code>css</code> 文件</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">inject:</span></span><br><span class="line">  <span class="attr">head:</span></span><br><span class="line">   <span class="bullet">-</span> <span class="string">&lt;link</span> <span class="string">rel=&quot;stylesheet&quot;</span> <span class="string">href=&quot;/css/***.css&quot;&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>阳光不燥，微风正好</title>
      <link href="/Notepad/b8cf1317.html"/>
      <url>/Notepad/b8cf1317.html</url>
      
        <content type="html"><![CDATA[<p>臣亮言：<mark class="hl-label default">先帝</mark> 創業未半，而<mark class="hl-label blue">中道崩殂</mark> 。今天下三分，<mark class="hl-label pink">益州疲敝</mark> ，此誠<mark class="hl-label red">危急存亡之秋</mark> 也！然侍衞之臣，不懈於內；<mark class="hl-label purple">忠志之士</mark> ，忘身於外者，蓋追先帝之殊遇，欲報之於陛下也。誠宜開張聖聽，以光先帝遺德，恢弘志士之氣；不宜妄自菲薄，引喻失義，以塞忠諫之路也。<br>宮中、府中，俱為一體；陟罰臧否，不宜異同。若有<mark class="hl-label orange">作奸</mark> 、<mark class="hl-label green">犯科</mark> ，及為忠善者，宜付有司，論其刑賞，以昭陛下平明之治；不宜偏私，使內外異法也。</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
          <category> 碎碎念念 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> 碎碎念念 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
